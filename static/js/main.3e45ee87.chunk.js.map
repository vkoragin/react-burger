{"version":3,"sources":["components/app/app.module.css","components/burger-ingredients/burger-ingredients.module.css","components/order-details/order-details.module.css","components/modal-overlay/modal-overlay.module.css","components/total-price/total-price.module.css","components/profile/profile.module.css","components/orders/orders.module.css","pages/ingredients.module.css","pages/order.module.css","components/loader/loader.module.css","components/loader-overlay/loader-overlay.module.css","components/feed-item/feed-item.module.css","components/app-header/app-header.tsx","utils.ts","url.ts","services/actions/actionTypes.ts","services/actions/auth.ts","pages/login.tsx","pages/register.tsx","components/tabs/tabs.tsx","components/ingredient/ingredient.tsx","components/ingredients-group/ingredients-group.tsx","services/actions/burger-ingredients.ts","components/burger-ingredients/burger-ingredients.tsx","images/done.png","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","services/actions/order-details.ts","components/total-price/total-price.tsx","components/not-bun-ingredients-constructor/not-bun-ingredients-constructor.tsx","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","pages/forgot-password.js","services/actions/forgot-password.ts","pages/reset-password.tsx","services/actions/reset-password.ts","services/actions/profile.ts","services/hooks.ts","components/profile/profile.tsx","components/feed-item/feed-item.tsx","services/actions/wsActionTypes.ts","components/orders/orders.tsx","components/protected-route.tsx","pages/profile.tsx","pages/feed.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredients.tsx","pages/not-found-404.tsx","components/order/order.tsx","services/actions/order.ts","pages/order.tsx","components/protected-un-auth-reset-route.tsx","components/protected-un-auth-route.tsx","components/loader-overlay/loader-overlay.tsx","components/loader/loader.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/burger-ingredients.ts","services/reducers/order-details.ts","services/reducers/loader.ts","services/reducers/wsReducer.ts","services/reducers/order.ts","services/reducers/profile.ts","services/reducers/index.ts","services/store.ts","services/middleware/socketMiddleware.ts","index.tsx","pages/feed.module.css","components/app-header/app-header.module.css","components/order/order.module.css","pages/profile.module.css","components/burger-constructor/burger-constructor.module.css","components/ingredient/ingredient.module.css","components/ingredient-details/ingredient-details.module.css","components/ingredients-group/ingredients-group.module.css","components/modal/modal.module.css","components/not-bun-ingredients-constructor/not-bun-ingredients-constructor.module.css","pages/home.module.css","pages/not-found.module.css"],"names":["module","exports","AppHeader","location","useLocation","className","styles","wrapper","header","list","navItem","type","pathname","exact","to","activeClassName","active","logo","profile","indexOf","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","emailRegExp","formatDate","date","today","targetDate","hours","getHours","minutes","getMinutes","setHours","dif","timeZone","getTimezoneOffset","profileUrl","GET_INGREDIENTS","GET_INGREDIENTS_FAILED","GET_INGREDIENTS_SUCCESS","REORDER_INGREDIENTS","ACTIVE_TAB","GET_ODDER_NUMBER","GET_ODDER_NUMBER_FAILED","GET_ODDER_NUMBER_SUCCESS","ADD_TO_CONSTRUCTOR","DEL_FROM_CONSTRUCTOR","CLEAR_CONSTRUCTOR","SET_UNIQUE_KEY","SHOW_LOADER","GET_ORDER","GET_ORDER_FAILED","GET_ORDER_SUCCESS","CLEAR_ORDER","GET_USER","GET_USER_FAILED","GET_USER_SUCCESS","logoutUser","dispatch","loader","axios","post","token","localStorage","refreshToken","headers","then","response","removeItem","data","catch","error","console","finally","callback","accessToken","setItem","LoginPage","useState","email","setEmail","errorEmail","setErrorEmail","errorEmailText","setErrorEmailText","password","setPassword","passwordType","setPasswordType","errorPassword","setPasswordError","errorPasswordText","setPasswordText","useDispatch","history","useHistory","clearErrors","validate","isPasswordValid","validatePassword","isEmailValid","validateEmail","isValid","Boolean","length","validEmail","test","String","toLowerCase","onSubmit","e","preventDefault","loginUser","pathName","state","from","onChange","target","errorText","placeholder","icon","onIconClick","size","RegisterPage","setName","errorName","setNameError","isNameValid","validateName","registerUser","Tabs","ingredientsTypes","activeTab","useSelector","store","onClick","style","display","paddingBottom","map","ingredientsType","index","Ingredient","ingredient","count","setCount","constructor","ingredients","ingredientId","useDrag","item","dragRef","useEffect","filter","background","link","ref","src","image","alt","price","IngredientsGroup","group","anchor","setActiveTab","BurgerIngredients","useInView","threshold","bun","inViewBun","sauce","inViewSauce","main","inViewMain","OrderDetails","orderNumber","number","numberRequest","numberFailed","details","done","ModalOverlay","onClose","handleClose","keyCode","React","window","addEventListener","removeEventListener","overlay","modalRoot","getElementById","Modal","children","ReactDOM","createPortal","modal","close","getOrderNumber","ingredientsIds","order","status","TotalPrice","visible","setVisible","setPrice","isAuth","createOrder","totalPrice","reduce","sum","current","NotBunIngredientsConstructor","thumbnail","text","id","moveElement","uniqueKey","useRef","useDrop","accept","hover","monitor","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","collect","isDragging","drag","opacity","other","otherItem","isLocked","delIngredient","BurgerConstructor","setBun","otherIngredients","setOtherIngredients","el","dropRef","isBun","useCallback","newElements","push","splice","burgerConstructor","i","renderElement","HomePage","ingredientsRequest","ingredientsFailed","content","DndProvider","backend","HTML5Backend","ForgotPasswordPage","resetPassword","ResetPasswordPage","setToken","errorToken","setTokenError","isTokenValid","validateToken","updateUser","patch","user","selectorHook","dispatchHook","Profile","defEmail","setDefEmail","defName","setDefName","defPassword","get","setUserData","profileForm","href","FeedItem","showStatus","orderIngredients","setOrderIngredients","images","setImages","orderId","targetIngredients","forEach","targetIngredient","targetImages","createdAt","color","getStatus","footer","left","showCount","imageWrapper","zIndex","coast","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","Orders","messages","orders","setOrders","split","payload","userFeed","ProtectedRoute","rest","render","ProfilePage","url","useRouteMatch","navList","path","FeedPage","createdNumbers","setCreatedNumbers","doneNumbers","setDoneNumbers","total","setTotal","totalToday","setTotalToday","created","splitArray","arr","p","c","feed","feedInfo","statusesWrapper","statuses","statusesColumns","doneNumbersColumn","statusesColumn","createdNumbersColumn","IngredientDetails","useParams","setIngredient","calories","proteins","fat","carbohydrates","IngredientsPage","NotFound404","container","Order","orderRequest","orderFailed","getOrder","orderIngredientsSet","Set","turgetOrderIngredients","add","orderInfo","orderWrapper","info","image_mobile","OrderPage","orderPage","ProtectedUnAuthResetRoute","wasResetPassword","getItem","ProtectedUnAuthRoute","LoaderOverlay","loaderRoot","Loader","App","ModalSwitch","action","stopPropagation","goBack","fetch","res","ok","json","Promise","reject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialTabState","initialIngredientsState","initialState","wsConnected","initialOrderState","initialUSerState","userRequest","userFailed","rootReducer","combineReducers","Number","Math","random","toFixed","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","WebSocket","onopen","event","onerror","onmessage","parsedData","JSON","parse","onclose","message","send","stringify","createStore","initStore","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,KAAO,oB,oBCAzBD,EAAOC,QAAU,CAAC,YAAc,0C,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,iC,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,iC,oBCA5BD,EAAOC,QAAU,CAAC,WAAa,kC,oBCA/BD,EAAOC,QAAU,CAAC,YAAc,+B,oBCAhCD,EAAOC,QAAU,CAAC,SAAW,2B,oBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,UAAY,2B,oBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,kC,yCCA5BD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,OAAS,0BAA0B,OAAS,0BAA0B,OAAS,0BAA0B,aAAe,gCAAgC,MAAQ,yBAAyB,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,0B,sJCMtS,SAASC,IACpB,IAAMC,EAAWC,cAEjB,OACI,qBAAKC,UAAYC,IAAOC,QAAxB,SACE,yBAAQF,UAAYC,IAAOE,OAA3B,UACI,qBAAKH,UAAU,MAAf,SACI,qBAAIA,UAAYC,IAAOG,KAAvB,UACI,qBAAIJ,UAAYC,IAAOI,QAAvB,UACE,cAAC,aAAD,CAAYC,KAA6B,MAAtBR,EAASS,SAAmB,UAAY,cAC3D,cAAC,IAAD,CACIC,OAAO,EACPC,GAAE,IACFT,UAAU,uDACVU,gBAAiBT,IAAOU,OAJ5B,mFAMF,qBAAIX,UAAYC,IAAOI,QAAvB,UACI,cAAC,WAAD,CAAUC,KAA6B,UAAtBR,EAASS,SAAuB,UAAY,cAC7D,cAAC,IAAD,CACEC,OAAO,EACPC,GAAE,QACFT,UAAU,uDACVU,gBAAiBT,IAAOU,OAJ1B,+FAQZ,yBAASX,UAAYC,IAAOW,KAA5B,SACM,cAAC,IAAD,CAASJ,OAAO,EAAMC,GAAE,IAAxB,SAA+B,cAAC,OAAD,QAErC,0BAAST,UAAYC,IAAOY,QAA5B,UACI,cAAC,cAAD,CAAaP,MAAQR,EAASS,SAASO,QAAQ,YAAc,UAAY,cACzE,cAAC,IAAD,CACML,GAAE,WACFT,UAAU,uDACVU,gBAAiBT,IAAOU,OAH9B,qG,WCtCX,SAASI,EAAUC,GACtB,IAAMC,EAAUC,SAASC,OAAOC,MAE9B,IAAIC,OAAO,WAAaL,EAAKM,QAAQ,+BAAgC,QAAU,aAEjF,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,EAG7C,SAASC,EAAUT,EAAcU,EAAeC,GAErD,IAAIC,GADJD,EAAQA,GAAS,IACDE,QAChB,GAAkB,iBAAPD,GAAmBA,EAAK,CACjC,IAAME,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAkB,IAANL,GACxBA,EAAMD,EAAME,QAAUC,EAEpBF,GAAOA,EAAIM,cACbP,EAAME,QAAUD,EAAIM,eAGtB,IAAIC,EAAgBnB,EAAO,KAD3BU,EAAQU,mBAAmBV,IAE3B,IAAK,IAAMW,KAAYV,EAAO,CAC5BQ,GAAiB,KAAOE,EACxB,IAAMC,EAAYX,EAAMU,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAG3BpB,SAASC,OAASgB,EAOb,IAEMI,EAAc,wIAEdC,EAAa,SAACC,GACzB,IAAIC,EAAQ,IAAIX,KACZY,EAAa,IAAIZ,KAAKU,GACtBG,EAAyBD,EAAWE,WACpCC,EAA2BH,EAAWI,aACtCH,EAAQ,KAAIA,EAAQ,IAAMA,GAC1BE,EAAU,KAAIA,EAAU,IAAMA,GAElCJ,EAAMM,SAAS,EAAE,EAAE,EAAE,GACrBL,EAAWK,SAAS,EAAE,EAAE,EAAE,GAC1B,IAAIC,IAAyBP,GAASC,GAHxB,MAIF,IAARM,IAAWA,EAAM,8CACT,IAARA,IAAWA,EAAM,kCACjBA,EAAM,IAAGA,GAAY,iDACzB,IAAIC,EAAYP,EAAWQ,oBAAqB,GAChD,OAAOF,EAAM,KAAOL,EAAQ,IAAME,EAAU,UAAYI,EAAW,EAAIA,EAAW,KAAmB,EAAZA,IC/ChFE,EAAa,kD,iBCPbC,EAAkB,kBAClBC,EAAyB,yBACzBC,EAA0B,0BAC1BC,EAAsB,sBAEtBC,EAAa,aAEbC,EAAmB,mBACnBC,EAA0B,0BAC1BC,EAA2B,2BAE3BC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAiB,iBAEjBC,EAAc,cAEdC,EAAY,YACZC,EAAmB,mBACnBC,EAAoB,oBACpBC,EAAc,cAEdC,EAAW,WACXC,EAAkB,kBAClBC,EAAmB,mBCiCzB,SAASC,IACZ,OAAO,SAASC,GAKZ,OAJAA,EAAS,CACLpE,KAAM2D,EAAaU,QAAQ,IAGxBC,IACNC,KF7DgB,oDE6DA,CAACC,MAAOC,aAAaC,cAAe,CACjDC,QAAS,CAAC,eAAgB,oCAE7BC,MAA0B,SAACC,GAIxB,OHzCR1D,EGsCqB,cHtCL,GAAI,CAAEI,SAAU,IGuCxBkD,aAAaK,WAAW,gBACxBL,aAAaK,WAAW,iBACjBD,EAASE,QAEnBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,MAEjBE,SAAQ,kBAAMf,EAAS,CACpBpE,KAAM2D,EAAaU,QAAQ,QAKhC,SAASK,EAAcU,GAC1B,OAAO,SAAShB,GAKZ,OAJAA,EAAS,CACLpE,KAAM2D,EAAaU,QAAQ,IAGxBC,IACNC,KFrFsB,mDEqFA,CAACC,MAAOC,aAAaC,cAAe,CACvDC,QAAS,CAAC,eAAgB,oCAE7BC,MAA4B,SAACC,GAI1B,OAHA1D,EAAU,cAAe0D,EAASE,KAAKM,aACvCZ,aAAaa,QAAQ,eAAgBT,EAASE,KAAKL,cACnDN,EAASgB,KACFP,EAASE,QAEnBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,MAEjBE,SAAQ,kBAAMf,EAAS,CACpBpE,KAAM2D,EAAaU,QAAQ,Q,WCjGhC,SAASkB,IACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAoD,YAA5F,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA0CV,oBAAS,GAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA6CZ,mBAAS,IAAtD,mBAAOa,EAAP,KAA0BC,EAA1B,KACMlC,EAAWmC,cACXC,EAAUC,cACVjH,EAAWC,cA2BXiH,EAAc,WAChBN,GAAiB,GACjBR,GAAc,IASZe,EAAW,WACb,IAAMC,EAAkBC,IAClBC,EAAeC,IACrB,OAAOH,GAAmBE,GAGxBD,EAAmB,WACrB,IAAMG,EAAUC,QAAQlB,EAASmB,QAAUnB,EAASmB,QJ3BzB,GI+B3B,OAHInB,EAASmB,QAAUnB,EAASmB,OJ5BL,GI4BiCZ,EAAgB,qMACvEP,EAASmB,QAAQZ,EAAgB,+JAC5BF,GAAVY,GACOA,GAGLD,EAAgB,WAClB,IAAMI,EAAalF,EAAYmF,KAAKC,OAAO5B,GAAO6B,eAC5CN,EAAUC,QAAQxB,EAAMyB,QAAUC,GAIxC,OAHI1B,EAAMyB,SAAWC,GAAYrB,EAAkB,uEAC9CL,EAAMyB,QAAQpB,EAAkB,+JAC3BF,GAAVoB,GACOA,GAGX,OACI,uBAAMtH,UAAU,OAAO6H,SApDb,SAACC,IACXA,EAAEC,iBACFf,IACgBC,MAMZvC,EDzBL,SAAoBW,GACvB,OAAO,SAASX,GAKZ,OAJAA,EAAS,CACLpE,KAAM2D,EAAaU,QAAQ,IAGxBC,IACNC,KFde,mDEcAQ,EAAM,CAClBJ,QAAS,CAAC,eAAgB,oCAE7BC,MAAyB,SAACC,GAGvB,OAFA1D,EAAU,cAAe0D,EAASE,KAAKM,aACvCZ,aAAaa,QAAQ,eAAgBT,EAASE,KAAKL,cAC5CG,EAASE,QAEnBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,MAEjBE,SAAQ,kBAAMf,EAAS,CACpBpE,KAAM2D,EAAaU,QAAQ,QCMlBqD,CAJI,CACTjC,MAAOA,EACPM,SAAUA,KAGbnB,MAAK,WAAO,IAAD,IACF+C,EAAQ,OAAGnI,QAAH,IAAGA,GAAH,UAAGA,EAAUoI,aAAb,iBAAG,EAAiBC,YAApB,aAAG,EAAuB5H,SACxCuG,EAAQxF,QAAQ,CAAEf,SAAU0H,QAwCpC,UACI,mBAAGjI,UAAU,kCAAb,sCACA,qBAAKA,UAAU,OAAf,SACA,cAAC,QAAD,CACIoI,SAhEQ,SAACN,GACjB9B,EAAS8B,EAAEO,OAAO3G,QAgEVA,MAAOqE,EACP/E,KAAM,QACNuE,MAAOU,EACPqC,UAAWnC,EACXoC,YAAa,YAEjB,qBAAKvI,UAAU,OAAf,SACA,cAAC,QAAD,CACIoI,SArEW,SAACN,GACpBxB,EAAYwB,EAAEO,OAAO3G,QAqEbpB,KAAMiG,EACN7E,MAAO2E,EACPrF,KAAM,WACNwH,KAAuB,aAAjBjC,EAA8B,WAAa,WACjDhB,MAAOkB,EACP6B,UAAW3B,EACX8B,YAlDO,WAETjC,EADW,aAAjBD,EACsB,OACA,aAgDdgC,YAAa,2CAEjB,mBAAGvI,UAAU,QAAb,SACI,cAAC,SAAD,CAAQM,KAAK,UAAUoI,KAAK,SAA5B,8CAEJ,oBAAG1I,UAAU,kDAAb,qIAAwF,cAAC,IAAD,CAAMS,GAAG,YAAT,6HACxF,oBAAGT,UAAU,kDAAb,wFAA8E,cAAC,IAAD,CAAMS,GAAG,mBAAT,iICnGnF,SAASkI,IACZ,MAA0B7C,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAoD,YAA5F,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA0CV,oBAAS,GAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA6CZ,mBAAS,IAAtD,mBAAOa,EAAP,KAA0BC,EAA1B,KACA,EAAwBd,mBAAS,IAAjC,mBAAO9E,EAAP,KAAa4H,EAAb,KACA,EAAkC9C,oBAAS,GAA3C,mBAAO+C,EAAP,KAAkBC,EAAlB,KAEMhC,EAAUC,cACVrC,EAAWmC,cAmCXI,EAAW,WACb,IAAMC,EAAkBC,IAClBC,EAAeC,IACf0B,EAAcC,IACpB,OAAO9B,GAAmBE,GAAgB2B,GAGxC5B,EAAmB,WACrB,IAAMG,EAAUC,QAAQlB,EAASmB,QAAUnB,EAASmB,QL3BzB,GK+B3B,OAHInB,EAASmB,QAAUnB,EAASmB,OL5BL,GK4BiCZ,EAAgB,qMACvEP,EAASmB,QAAQZ,EAAgB,+JAC5BF,GAAVY,GACOA,GAGLD,EAAgB,WAClB,IAAMI,EAAalF,EAAYmF,KAAKC,OAAO5B,GAAO6B,eAC5CN,EAAUC,QAAQxB,EAAMyB,QAAUC,GAIxC,OAHI1B,EAAMyB,SAAWC,GAAYrB,EAAkB,uEAC9CL,EAAMyB,QAAQpB,EAAkB,+JAC3BF,GAAVoB,GACOA,GAGL0B,EAAe,WACjB,IAAM1B,EAAUC,QAAQvG,EAAKwG,QAE7B,OADUsB,GAAVxB,GACOA,GAGLN,EAAc,WAChBN,GAAiB,GACjBR,GAAc,GACd4C,GAAa,IAGjB,OACI,uBAAM9I,UAAU,OAAO6H,SApDV,SAACC,IACdA,EAAEC,iBACFf,IACgBC,MAOZvC,EFdL,SAAuBW,GAC1B,OAAO,SAASX,GAKZ,OAJAA,EAAS,CACLpE,KAAM2D,EAAaU,QAAQ,IAGxBC,IACNC,KFvCiB,sDEuCAQ,EAAM,CACpBJ,QAAS,CAAC,eAAgB,oCAE7BC,MAA4B,SAACC,GAG1B,OAFA1D,EAAU,cAAe0D,EAASE,KAAKM,aACvCZ,aAAaa,QAAQ,eAAgBT,EAASE,KAAKL,cAC5CG,EAASE,QAEnBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,MAEjBE,SAAQ,kBAAMf,EAAS,CACpBpE,KAAM2D,EAAaU,QAAQ,QELlBsE,CALI,CACTlD,MAAOA,EACPM,SAAUA,EACVrF,KAAMA,KAGTkE,MAAK,kBAAM4B,EAAQxF,QAAQ,CAAEf,SAAU,UAyC5C,UACI,mBAAGP,UAAU,kCAAb,gFACA,qBAAKA,UAAU,OAAf,SACI,cAAC,QAAD,CACIM,KAAM,OACNiI,YAAa,qBACbH,SApEG,SAACN,GAChBc,EAAQd,EAAEO,OAAO3G,QAoELA,MAAOV,EACPA,KAAM,OACNuE,MAAOsD,EACPP,UApFM,kKAsFd,qBAAKtI,UAAU,OAAf,SACI,cAAC,QAAD,CACIoI,SApFI,SAACN,GACjB9B,EAAS8B,EAAEO,OAAO3G,QAoFNA,MAAOqE,EACP/E,KAAM,QACNuE,MAAOU,EACPqC,UAAWnC,EACXoC,YAAa,uDAErB,qBAAKvI,UAAU,OAAf,SACI,cAAC,QAAD,CACIoI,SAzFO,SAACN,GACpBxB,EAAYwB,EAAEO,OAAO3G,QAyFTpB,KAAMiG,EACN7E,MAAO2E,EACPrF,KAAM,WACNwH,KAAuB,aAAjBjC,EAA8B,WAAa,WACjDhB,MAAOkB,EACP6B,UAAW3B,EACX8B,YAxFG,WAETjC,EADW,aAAjBD,EACsB,OACA,aAsFVgC,YAAa,qHAErB,mBAAGvI,UAAU,QAAb,SACI,cAAC,SAAD,CAAQM,KAAK,UAAUoI,KAAK,SAA5B,4HAEJ,oBAAG1I,UAAU,kDAAb,kIAAqF,cAAC,IAAD,CAAMS,GAAG,SAAT,kDCvHlF,SAASyI,EAAT,GAAiD,IAAjCC,EAAgC,EAAhCA,iBACrBC,EAAcC,aAAY,SAACC,GAAD,OAAuBA,EAAMF,aAAvDA,UAEFG,EAAU,SAACzB,GACfA,EAAEC,kBAGJ,OACE,qBAAKyB,MAAO,CAAEC,QAAS,OAAQC,cAAe,QAA9C,SACKP,EAAiBQ,KAAI,SAACC,EAAiBC,GAAlB,OACpB,cAAC,MAAD,CAAKnI,MAAOkI,EACPjJ,OAAQyI,IAAcQ,EAEtBL,QAASA,EAHd,SAIEK,GAFQC,Q,8BCVL,SAASC,EAAYnI,GAClC,IAAMoI,EAAapI,EAAMoI,WACzB,EAA0BjE,mBAAS,GAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACQC,EAAgBb,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAzDD,YACFpK,EAAWC,cACXqK,EAAeL,EAAU,IAE/B,EAAoBM,YAAQ,CAC1B/J,KAAM,aACNgK,KAAMP,IAFCQ,EAAT,oBAUA,OALAC,qBAAU,WACR,IAAMR,EAAQE,EAAYO,QAAO,SAAAH,GAAI,OAAIA,EAAI,MAAYP,EAAU,OAASvC,OAC5EyC,EAASD,KACR,CAACE,EAAaH,IAGf,cAAC,IAAD,CAEEtJ,GAAI,CACFF,SAAS,gBAAD,OAAkB6J,GAC1BlC,MAAO,CAAEwC,WAAY5K,IAEvBE,UAAWC,IAAO0K,KANpB,SAQE,yBAAQ3K,UAAWC,IAAO8J,WAAYa,IAAKL,EAA3C,UACGP,EAAQ,GAAK,cAAC,UAAD,CAASA,MAA2B,QAApBD,EAAWzJ,KAAiB0J,EAAQ,EAAIA,EAAOtB,KAAK,YAClF,4BAAG,qBAAKmC,IAAKd,EAAWe,MAAOC,IAAKhB,EAAW/I,SAC/C,oBAAGhB,UAAYC,IAAO+K,MAAtB,UACE,sBAAMhL,UAAU,qCAAhB,SACG+J,EAAWiB,QAEd,cAAC,eAAD,CAAc1K,KAAK,eAErB,4BAAYN,UAAU,8BAAtB,SAAqD+J,EAAW/I,WAhB7DoJ,G,wBCzBI,SAASa,GAAkBtJ,GACxC,OACE,0BAAS3B,UAAYC,KAAOiL,MAA5B,UACE,wBAAQlL,UAAW,8BAAgC2B,EAAMwJ,OAAzD,SACKxJ,EAAMxB,SAEX,yBAASH,UAAYC,KAAOkK,YAA5B,SACGxI,EAAMwI,YAAYR,KAAI,SAAAI,GAAU,OAAI,cAACD,EAAD,CAAoCC,WAAYA,GAA/BA,EAAU,a,yBC2BjE,SAASqB,GAAchC,GAC1B,MAAO,CACH9I,KAAMmD,EACN2F,a,aChCO,SAASiC,KACtB,IAAQlB,EAAgBd,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAzDA,YAEFzF,EAAWmC,cAEjB,EAAyByE,aAAU,CAACC,UAAW,KAA/C,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA6BH,aAAU,CAACC,UAAW,KAAnD,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA2BL,aAAU,CAACC,UAAW,IAAjD,mBAAOK,EAAP,KAAaC,EAAb,KAQA,OANArB,qBAAU,WACJiB,EAAW/G,EAAS0G,GAAa,mCAC5BO,EAAajH,EAAS0G,GAAa,mCACnCS,GAAYnH,EAAS0G,GAAa,kDAI3C,gCACE,cAAClC,EAAD,CAAMC,iBAAkB,CAAC,iCAAS,iCAAS,gDAC3C,sBAAKnJ,UAAYC,KAAOkK,YAAxB,UACE,qBAAKS,IAAKY,EAAV,SACE,cAACP,GAAD,CAAkBd,YAAaA,EAAYM,QAAO,SAAAV,GAAU,MAAwB,QAApBA,EAAWzJ,QACzD6K,OAAQ,MACRhL,OAAQ,qCAE5B,qBAAKyK,IAAKc,EAAV,SACE,cAACT,GAAD,CAAkBd,YAAaA,EAAYM,QAAO,SAAAV,GAAU,MAAwB,UAApBA,EAAWzJ,QACzD6K,OAAQ,QACRhL,OAAQ,qCAE5B,qBAAKyK,IAAKgB,EAAV,SACE,cAACX,GAAD,CAAkBd,YAAaA,EAAYM,QAAO,SAAAV,GAAU,MAAwB,SAApBA,EAAWzJ,QACzD6K,OAAQ,OACRhL,OAAQ,uD,kCCzCrB,OAA0B,iCCK1B,SAAS2L,KACtB,MAAgDzC,aAAY,SAACC,GAAD,OAAuBA,EAAMyC,eAAjFC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,cAEhB,OAFA,EAA+BC,aAEN,mBAAGlM,UAAU,kDAAb,wNAChBiM,EAAsB,mBAAGjM,UAAU,kDAAb,sGAG3B,sBAAKA,UAAWC,KAAOkM,QAAvB,UACE,mBAAGnM,UAAU,mCAAb,SAAiDgM,IACjD,mBAAGhM,UAAU,mCAAb,iIACA,mBAAGA,UAAU,QAAb,SAAqB,qBAAK6K,IAAKuB,GAAMrB,IAAI,WACzC,mBAAG/K,UAAU,mCAAb,qJACA,mBAAGA,UAAU,kDAAb,+P,6CCTKqM,GAAsD,SAAC1K,GAChE,IAAM2K,EAAU3K,EAAM2K,QAChBC,EAAc,SAACzE,GACC,KAAdA,EAAE0E,SAAgBF,EAAQxE,IAQlC,OALA2E,IAAMjC,WAAU,WAEZ,OADAkC,OAAOC,iBAAiB,UAAWJ,GAC5B,kBAAMG,OAAOE,oBAAoB,UAAWL,OAG/C,qBAAKvM,UAAWC,KAAO4M,QAAStD,QAAS+C,KCb/CQ,GAAY5L,SAAS6L,eAAe,UAM7BC,GAAwC,SAACrL,GAClD,IAAQsL,EAAsBtL,EAAtBsL,SAAUX,EAAY3K,EAAZ2K,QAElB,OAAOY,IAASC,aAEV,qCACE,sBAAKnN,UAAWC,KAAOmN,MAAvB,UACE,qBAAKpN,UAAWC,KAAOoN,MAAO9D,QAAS+C,EAAvC,SAAgD,cAAC,YAAD,CAAWhM,KAAK,cAC7D2M,KAEL,cAAC,GAAD,CAAcX,QAASA,OAG3BQ,K,qBCZD,SAASQ,GAAgBC,GAC5B,OAAO,SAAS7I,GAKZ,OAJAA,EAAS,CACLpE,KAAMoD,IAGHkB,IACNC,KdnBwB,+CcmBA,CAACsF,YAAaoD,GAAiB,CACpDtI,QAAS,CACL,eAAgB,iCAChB,cAAiBlE,EAAU,kBAGlCmE,MAA8B,SAACC,GAQ5B,OAPAT,EAAS,CACLpE,KAAMsD,EACNoI,OAAQ7G,EAASE,KAAKmI,MAAMxB,SAEhCtH,EAAS,CACLpE,KAAMyD,IAEHoB,EAASE,QAEnBC,OAAM,SAAAC,GACHb,EAAS,CAACpE,KAAMqD,IACc,MAA1B4B,EAAMJ,SAASsI,QACf/I,EAASM,EAAasI,SC5BvB,SAASI,KACtB,MAA8B5H,oBAAS,GAAvC,mBAAO6H,EAAP,KAAgBC,EAAhB,KACQ1D,EAAgBb,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAzDD,YACR,EAA0BpE,mBAAS,GAAnC,mBAAOkF,EAAP,KAAc6C,EAAd,KACM/G,EAAUC,cACV+G,EAAS/M,EAAU,eACnB2D,EAAWmC,cAiBXkH,EAAc,WAClB,IAAMR,EAAiBrD,EAAYP,KAAI,SAAAI,GAAU,OAAIA,EAAU,OAC/DrF,EAAS4I,GAAeC,KAQ1B,OALA/C,qBAAU,WACR,IAAMwD,EAAa9D,EAAY+D,QAAO,SAACC,EAAKC,GAAN,MAAmC,QAAjBA,EAAQ7N,KAAiB4N,EAAsB,EAAhBC,EAAQnD,MAAYkD,EAAMC,EAAQnD,QAAO,GAChI6C,EAASG,KACR,CAAC9D,IAGF,qCACE,sBAAKlK,UAAYC,KAAO+N,WAAxB,UACE,sBAAMhO,UAAU,qCAAhB,SAAsDgL,IACtD,cAAC,eAAD,CAAc1K,KAAK,YACnB,mBAAGN,UAAU,QAAb,SAlBGuH,QAAQ2C,EAAY1C,QAAU0C,EAAYO,QAAO,SAAAH,GAAI,MAAkB,QAAdA,EAAKhK,QAAgBkH,SAmB9D,cAAC,SAAD,CAAQ+B,QA7BlB,WACTuE,GACFF,GAAW,GACVG,KAEDjH,EAAQxF,QAAQ,CAAEf,SAAU,YAwBkBD,KAAK,UAAUoI,KAAK,SAA7C,kGAGnBiF,GAAW,cAAC,GAAD,CAAOrB,QAlCR,kBAAMsB,GAAW,IAkChB,SAAyB,cAAC9B,GAAD,S,kCCpC7B,SAASsC,GAAT,GAAyI,IAAjGC,EAAgG,EAAhGA,UAAWC,EAAqF,EAArFA,KAAMC,EAA+E,EAA/EA,GAAI1E,EAA2E,EAA3EA,MAAO2E,EAAoE,EAApEA,YAAaxD,EAAuD,EAAvDA,MAAOyD,EAAgD,EAAhDA,UAC7F7D,EAAM8D,iBAAuB,MAC7BhK,EAAWmC,cAEjB,EAAiB8H,aAAQ,CACrBC,OAAQ,QAERC,MAHqB,SAGfvE,EAAwBwE,GAAU,IAAD,EACnC,GAAKlE,EAAIuD,QAAT,CAEA,IAAMY,EAAYzE,EAAKT,MACjBmF,EAAanF,EAEnB,GAAIkF,IAAcC,EAAlB,CAEA,IAAMC,EAAiB,UAAGrE,EAAIuD,eAAP,aAAG,EAAae,wBACjCC,GAAgBF,EAAkBG,OAASH,EAAkBI,KAAO,EACpEC,EAAeR,EAAQS,kBAE7B,GAAID,EAAJ,CAEA,IAAME,EAAeF,EAAaG,EAAIR,EAAkBI,IAEpDN,EAAYC,GAAcQ,EAAeL,GACzCJ,EAAYC,GAAcQ,EAAeL,IAE7CX,EAAYO,EAAWC,GACvB1E,EAAKT,MAAQmF,SAvBZU,EAAT,oBA2BA,EAA+BrF,YAAQ,CACnC/J,KAAM,QACNgK,KAAM,WACF,MAAO,CAAEiE,KAAI1E,UAEjB8F,QAAS,SAAAb,GAAO,MAAK,CACjBc,WAAYd,EAAQc,iBAN5B,mBAASA,EAAT,KAASA,WAAcC,EAAvB,KAiBMC,EAAUF,EAAa,EAAI,EAIjC,OAFAC,EAAKH,EAAK9E,IAGN,sBAAK5K,UAAWC,KAAO8P,MAAOvG,MAAO,CAACsG,QAASA,GAAUlF,IAAKA,EAA9D,UACI,cAAC,WAAD,CAAUtK,KAAK,YACf,qBAAKN,UAAWC,KAAO+P,UAAvB,SACI,cAAC,qBAAD,CACIC,UAAU,EACV1D,YAAa,kBAjBP,SAACkC,GACnB/J,EAAS,CACLpE,KAAMwD,EACN2K,UAAWA,IAcgByB,CAAczB,IACjCH,KAAMA,EACND,UAAWA,EACXrD,MAAOA,S,wBCnEZ,SAASmF,KACtB,MAAsBrK,qBAAtB,mBAAO0F,EAAP,KAAY4E,EAAZ,KACA,EAAgDtK,mBAAwB,IAAxE,mBAAOuK,EAAP,KAAyBC,EAAzB,KACQpG,EAAgBb,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAzDD,YACFxF,EAAWmC,cAEjB2D,qBAAU,WACR4F,EAAOlG,EAAYO,QAAO,SAAAV,GAAU,MAAwB,QAApBA,EAAWzJ,QAAgB,IACnEgQ,EAAoBpG,EAAYO,QAAO,SAAAV,GAAU,MAAwB,QAApBA,EAAWzJ,WAC/D,CAAC4J,IAEJ,MAAoByE,aAAQ,CAC1BC,OAAQ,aACRc,KAF0B,SAErBpF,GACH5F,EAAS,CACPpE,KAAMuD,EACN0M,GAAIjG,IAEN5F,EAAS,CACPpE,KAAO0D,EAAgBsG,YARpBkG,EAAT,oBAYMC,EAAQvG,EAAYO,QAAO,SAAAV,GAAU,MAAwB,QAApBA,EAAWzJ,QAAgBkH,OAEpEgH,EAAckC,uBAAY,SAAC3B,EAAWC,GAC1C,IAAM2B,EAAW,aAAON,GACpBI,GAASjF,GAAKmF,EAAYC,KAAKpF,GACnCmF,EAAYE,OAAO7B,EAAY,EAAG2B,EAAYE,OAAO9B,EAAW,GAAG,IACnErK,EAAS,CAAEpE,KAAMkD,EAAqBmN,YAAaA,MAChD,CAACN,EAAkB7E,EAAKiF,EAAO/L,IAmBpC,OACE,sBAAK1E,UAAWC,KAAO6Q,kBAAmBlG,IAAK4F,EAA/C,UACE,qBAAKxQ,UAAWC,KAAOuL,IAAvB,SAEMA,GACE,cAAC,qBAAD,CACElL,KAAM,MACN2P,UAAU,EACV3B,KAAM9C,EAAIxK,KAAO,8BACjBqN,UAAW7C,EAAG,aACdR,MAAOQ,EAAIR,UAInB,qBAAKhL,UAAWC,KAAOoQ,iBAAvB,SACGA,EAAiB1G,KAAI,SAACI,EAAYgH,GAAb,OA/BR,SAAChH,EAAyBF,GAC9C,IAAM4E,EAAY1E,EAAW0E,UAAY1E,EAAW0E,UAAY,GAChE,OACE,cAACL,GAAD,CAEEK,UAAWA,EACXF,GAAIxE,EAAU,IACdF,MAAOA,EACP2E,YAAaA,EACbF,KAAMvE,EAAW/I,KACjBqN,UAAWtE,EAAU,aACrBiB,MAAOjB,EAAWiB,OAPbyD,GA2BsCuC,CAAcjH,EAAYgH,QAGrE,qBAAK/Q,UAAWC,KAAOuL,IAAvB,SAEIA,GACE,cAAC,qBAAD,CACElL,KAAM,SACN2P,UAAU,EACV3B,KAAM9C,EAAIxK,KAAO,wBACjBqN,UAAW7C,EAAG,aACdR,MAAOQ,EAAIR,UAGrB,cAAC0C,GAAD,O,4CCjFC,SAASuD,KACd,MAAkD5H,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAnF+G,EAAR,EAAQA,mBAER,OAFA,EAA4BC,kBAEE,mBAAGnR,UAAU,kDAAb,wNACrBkR,EAA2B,mBAAGlR,UAAU,kDAAb,sGAGhC,qCACE,wBAAQA,UAAYC,KAAOE,OAA3B,SACE,oBAAIH,UAAU,sCAAd,qGAEF,yBAASA,UAAYC,KAAOmR,QAA5B,SACE,eAACC,GAAA,EAAD,CAAaC,QAAUC,KAAvB,UACI,cAAClG,GAAD,IACA,cAAC8E,GAAD,YCdP,SAASqB,KACZ,MAA0B1L,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACM1B,EAAWmC,cACXC,EAAUC,cAgBVM,EAAgB,WAClB,IAAMI,EAAalF,EAAYmF,KAAKC,OAAO5B,GAAO6B,eAC5CN,EAAUC,QAAQxB,EAAMyB,QAAUC,GAIxC,OAHI1B,EAAMyB,SAAWC,GAAYrB,EAAkB,uEAC9CL,EAAMyB,QAAQpB,EAAkB,+JAC3BF,GAAVoB,GACOA,GAGX,OACI,uBAAMtH,UAAU,OAAO6H,SApBZ,SAAAC,GACXA,EAAEC,iBACF7B,GAAc,GACEmB,KAEZ3C,ECTL,SAAwBqB,GAC3B,OAAO,SAASrB,GAKZ,OAJAA,EAAS,CACLpE,KAAM2D,EAAaU,QAAQ,IAGxBC,IACNC,KpBdwB,uDoBcA,CAACkB,MAAOA,GAAQ,CACrCd,QAAS,CACL,eAAgB,iCAChB,cAAiBlE,EAAU,kBAGlCmE,MAA8B,SAACC,GAE5B,OADAJ,aAAaa,QAAQ,gBAAiB,QAC/BT,EAASE,QAEnBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,MAEjBE,SAAQ,kBAAMf,EAAS,CACpBpE,KAAM2D,EAAaU,QAAQ,QDZlB8M,CAAc1L,IACtBb,MAAK,kBAAM4B,EAAQxF,QAAQ,CAAEf,SAAU,wBAc5C,UACI,mBAAGP,UAAU,kCAAb,uIACA,qBAAKA,UAAU,OAAf,SACI,cAAC,QAAD,CACIoI,SA5BI,SAAAN,GAChB9B,EAAS8B,EAAEO,OAAO3G,QA4BNA,MAAOqE,EACP/E,KAAM,QACNuE,MAAOU,EACPqC,UAAWnC,EACXoC,YAAa,uDAErB,mBAAGvI,UAAU,QAAb,SACI,cAAC,SAAD,CAAQM,KAAK,UAAUoI,KAAK,SAA5B,wFAEJ,oBAAG1I,UAAU,kDAAb,0GAAiF,cAAC,IAAD,CAAMS,GAAG,SAAT,kDE9CtF,SAASiR,KACZ,MAAgC5L,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAoD,YAA5F,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA0CV,oBAAS,GAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA6CZ,mBAAS,IAAtD,mBAAOa,EAAP,KAA0BC,EAA1B,KACA,EAA0Bd,mBAAS,IAAnC,mBAAOhB,EAAP,KAAc6M,EAAd,KACA,EAAoC7L,oBAAS,GAA7C,mBAAO8L,EAAP,KAAmBC,EAAnB,KAEMnN,EAAWmC,cACXC,EAAUC,cA8BVC,EAAc,WAChBN,GAAiB,GACjBmL,GAAc,IAGZ5K,EAAW,WACb,IAAMC,EAAkBC,IAClB2K,EAAeC,IACrB,OAAO7K,GAAmB4K,GAGxB3K,EAAmB,WACrB,IAAMG,EAAUC,QAAQlB,EAASmB,QAAUnB,EAASmB,QtBvBzB,GsB2B3B,OAHInB,EAASmB,QAAUnB,EAASmB,OtBxBL,GsBwBiCZ,EAAgB,kOACvEP,EAASmB,QAAQZ,EAAgB,+JAC5BF,GAAVY,GACOA,GAGLyK,EAAgB,WAClB,IAAMzK,EAAUC,QAAQzC,EAAM0C,QAE9B,OADUqK,GAAVvK,GACOA,GAGX,OACI,uBAAMtH,UAAU,OAAO6H,SAxCZ,SAACC,IACZA,EAAEC,iBACFf,IACgBC,MAMZvC,EC1BL,SAAwBW,GAC3B,OAAO,SAASX,GAKZ,OAJAA,EAAS,CACLpE,KAAM2D,EAAaU,QAAQ,IAGxBC,IACNC,KtBbuB,6DsBaAQ,EAAM,CAC1BJ,QAAS,CACL,eAAgB,iCAChB,cAAiBlE,EAAU,kBAGlCmE,MAA6B,SAACC,GAC3B,OAAOA,EAASE,QAEnBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,MAEjBE,SAAQ,kBAAMf,EAAS,CACpBpE,KAAM2D,EAAaU,QAAQ,QDMlB8M,CAJI,CACTpL,SAAUA,EACVvB,MAAOA,KAGVI,MAAK,kBAAM4B,EAAQxF,QAAQ,CAAEf,SAAU,eA8B5C,UACI,mBAAGP,UAAU,kCAAb,uIACA,qBAAKA,UAAU,OAAf,SACI,cAAC,QAAD,CACIoI,SAtDO,SAACN,GACpBxB,EAAYwB,EAAEO,OAAO3G,QAsDTpB,KAAMiG,EACN7E,MAAO2E,EACPrF,KAAM,WACNwH,KAAuB,aAAjBjC,EAA8B,WAAa,WACjDhB,MAAOkB,EACP6B,UAAW3B,EACX8B,YAzDG,WAETjC,EADW,aAAjBD,EACsB,OACA,aAuDVgC,YAAa,qHAErB,qBAAKvI,UAAU,OAAf,SACI,cAAC,QAAD,CACIoI,SAtEG,SAACN,GAChB6J,EAAS7J,EAAEO,OAAO3G,QAsENpB,KAAK,OACLoB,MAAOoD,EACP9D,KAAM,QACNuE,MAAOqM,EACPtJ,UA/EO,8JAgFPC,YAAa,gHAErB,mBAAGvI,UAAU,QAAb,SACI,cAAC,SAAD,CAAQM,KAAK,UAAUoI,KAAK,SAA5B,sEAEJ,oBAAG1I,UAAU,kDAAb,0GAAiF,cAAC,IAAD,CAAMS,GAAG,SAAT,kD,6CE1DtF,SAASuR,GAAY3M,GACxB,OAAO,SAASX,GAKZ,OAJAA,EAAS,CACLpE,KAAMgE,IAGHM,IACNqN,MAAM7O,EAAYiC,EAAM,CACrBJ,QAAS,CACL,eAAgB,iCAChB,cAAiBlE,EAAU,kBAGlCmE,MAAuB,SAACC,GAKrB,OAJAT,EAAS,CACLpE,KAAMkE,EACN0N,KAAM/M,EAASE,KAAK6M,OAEjB/M,EAASE,KAAK6M,QAExB5M,OAAM,SAAAC,GACHb,EAAS,CAAEpE,KAAMiE,IACa,MAA1BgB,EAAMJ,SAASsI,QACf/I,EAASM,EAAagN,SCxD/B,IAAM3I,GAAgD8I,IAChDtL,GAAc,kBAAMuL,eCA1B,SAASC,KACZ,IAAQH,EAAS7I,IAAY,SAACC,GAAD,OAAuBA,EAAM4I,QAAlDA,KACR,EAAgCpM,mBAAS,IAAzC,mBAAOwM,EAAP,KAAiBC,EAAjB,KACA,EAA8BzM,mBAAS,IAAvC,mBAAO0M,EAAP,KAAgBC,EAAhB,KACMC,EAAc,GACpB,EAA0B5M,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA0CR,oBAAS,GAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA6CZ,mBAAS,IAAtD,mBAAOa,EAAP,KAA0BC,EAA1B,KACA,EAAwBd,mBAAS,IAAjC,mBAAO9E,EAAP,KAAa4H,EAAb,KACA,EAAkC9C,oBAAS,GAA3C,mBAAO+C,EAAP,KAAkBC,EAAlB,KAEMpE,GAAWmC,KAEjB2D,qBAAU,WACR9F,IFZK,SAASA,GAKZ,OAJAA,EAAS,CACLpE,KAAMgE,IAGHM,IACN+N,IAAIvP,EAAY,CACb6B,QAAS,CACL,eAAgB,iCAChB,cAAiBlE,EAAU,kBAGlCmE,MAAuB,SAACC,GAKrB,OAJAT,EAAS,CACLpE,KAAMkE,EACN0N,KAAM/M,EAASE,KAAK6M,OAEjB/M,EAASE,KAAK6M,QAExB5M,OAAM,SAAAC,GACHb,EAAS,CAAEpE,KAAMiE,IACa,MAA1BgB,EAAMJ,SAASsI,QACf/I,EAASM,EAAagN,aET/B,CAACtN,KAEJ8F,qBAAU,WACF0H,GACAU,GAAYV,KAEf,CAACA,IAEN,IAAMU,GAAc,SAACV,GACjBK,EAAYL,EAAKnM,OACjB0M,EAAWP,EAAKlR,MAChBgF,EAASkM,EAAKnM,OACd6C,EAAQsJ,EAAKlR,MACbsF,EAAYoM,IA6BVzL,GAAW,WACb,IAAMC,EAAkBC,KAClBC,EAAeC,KACf0B,EAAcC,KACpB,OAAO9B,GAAmBE,GAAgB2B,GAGxC5B,GAAmB,WACrB,IAAMG,EAAUC,QAAQlB,EAASmB,QAAUnB,EAASmB,Q1B1CzB,G0B8C3B,OAHInB,EAASmB,QAAUnB,EAASmB,O1B3CL,G0B2CiCZ,EAAgB,qMACvEP,EAASmB,QAAQZ,EAAgB,+JAC5BF,GAAVY,GACOA,GAGLD,GAAgB,WAClB,IAAMI,EAAalF,EAAYmF,KAAKC,OAAO5B,GAAO6B,eAC5CN,EAAUC,QAAQxB,EAAMyB,QAAUC,GAIxC,OAHI1B,EAAMyB,SAAWC,GAAYrB,EAAkB,uEAC9CL,EAAMyB,QAAQpB,EAAkB,+JAC3BF,GAAVoB,GACOA,GAGL0B,GAAe,WACjB,IAAM1B,EAAUC,QAAQvG,EAAKwG,QAE7B,OADUsB,GAAVxB,GACOA,GAGLN,GAAc,WAChBN,GAAiB,GACjBR,GAAc,GACd4C,GAAa,IA8BjB,OACIoJ,GACI,kCACI,uBAAMlS,UAAWC,KAAO4S,YAAc,QAAShL,SAhF9C,SAACC,IACVA,EAAEC,iBACFf,KACgBC,OAOZvC,GAASsN,GALI,CACTjM,MAAOA,EACP/E,KAAMA,EACNqF,SAAUA,MAwEV,UACI,qBAAKrG,UAAU,OAAf,SACI,cAAC,QAAD,CACIM,KAAM,OACNiI,YAAa,qBACbH,SAzFL,SAACN,GAChBc,EAAQd,EAAEO,OAAO3G,QAyFGA,MAAOV,EACPA,KAAM,OACNwH,KAAMxH,IAASwR,EAAU,YAAc,WACvCjN,MAAOsD,EACPJ,YAtBN,WACVzH,IAASwR,GACT5J,EAAQ4J,IAqBQlK,UA5HF,kKA8HN,qBAAKtI,UAAU,OAAf,SACI,cAAC,QAAD,CACIoI,SA3GJ,SAACN,GACjB9B,EAAS8B,EAAEO,OAAO3G,QA2GEA,MAAOqE,EACP/E,KAAM,QACNwH,KAAMzC,IAAUuM,EAAW,YAAc,WACzC/M,MAAOU,EACPqC,UAAWnC,EACXsC,YAtCL,WACX1C,IAAUuM,GACVtM,EAASsM,IAqCO/J,YAAa,qCAErB,qBAAKvI,UAAU,OAAf,SACI,cAAC,QAAD,CACIoI,SAlHD,SAACN,GACpBxB,EAAYwB,EAAEO,OAAO3G,QAkHDpB,KAAM,WACNoB,MAAO2E,EACPrF,KAAM,WACNwH,KAAMnC,IAAaqM,EAAc,YAAc,WAC/CnN,MAAOkB,EACP6B,UAAW3B,EACX8B,YAvDF,WACdpC,IAAaqM,GACbpM,EAAYoM,IAsDInK,YAAa,6CAxC1BlC,IAAaqM,GAAe3M,IAAUuM,GAAYtR,IAASwR,IA4ClD,oBAAGxS,UAAU,QAAb,UACA,mBAAG8S,KAAK,KAAK9S,UAAU,mCAAmCuJ,QArE/D,SAACzB,GACZA,EAAEC,iBACFf,KACAV,EAAYoM,GACZ1M,EAASsM,GACT1J,EAAQ4J,IAgEQ,kDACA,cAAC,SAAD,CAAQlS,KAAK,UAAUoI,KAAK,SAA5B,4E,wBCtKjB,SAASqK,GAASpR,GACrB,IAAO6L,EAAqB7L,EAArB6L,MAAOwF,EAAcrR,EAAdqR,WACN7I,EAAgBd,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAzDA,YACR,EAAgDrE,mBAAwB,IAAxE,mBAAOmN,EAAP,KAAyBC,EAAzB,KACA,EAA4BpN,mBAAmB,IAA/C,mBAAOqN,EAAP,KAAeC,EAAf,KACA,EAA0BtN,mBAAS,GAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAA0BnE,mBAAS,GAAnC,mBAAOkF,EAAP,KAAc6C,EAAd,KAEM/N,EAAWC,cACXsT,EAAU7F,EAAMxB,OAEtBxB,qBAAU,WACN,GAAIL,EAAY3C,OAAQ,CAAC,IAAD,EAChBwG,EAAa,EACbxC,EAAM,EACN8H,EAAmC,GAClC,OAAL9F,QAAK,IAALA,GAAA,UAAAA,EAAOrD,mBAAP,SAAoBoJ,SAAQ,SAACxJ,GACzB,IAAIyJ,EAAgCrJ,EAAYM,QAAO,SAAAH,GAAI,OAAIA,EAAI,MAAYP,KAAY,IAC3F,OAAIyJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAkBxI,SAClBsI,EAAkB1C,KAAK4C,GACO,QAA1BA,EAAiBlT,MAAmBkL,IACpCwC,GAAc,EAAIwF,EAAiBxI,MACnCQ,EAAM,GAEqB,QAA1BgI,EAAiBlT,OACtB0N,GAAcwF,EAAiBxI,WAGvC6C,EAASG,GACTkF,EAAoBI,MAEzB,CAACnJ,EAAaqD,EAAMrD,cAEvBK,qBAAU,WACN,IAAIgB,EAAM,EACNiI,EAAyB,GAC7BR,EAAiBM,SAAQ,SAAAxJ,GACG,QAApBA,EAAWzJ,MAAmBkL,IAC9BA,EAAM,EACNiI,EAAa7C,KAAK7G,EAAU,eAER,QAApBA,EAAWzJ,MACXmT,EAAa7C,KAAK7G,EAAU,iBAGpCqJ,EAAUK,GACVxJ,EAASwJ,EAAajM,UACvB,CAACyL,IAEJ,IAOwBxF,EAExB,OACI,cAAC,IAAD,CAEIhN,GAAI,CACAF,SAAS,GAAD,OAAKT,EAASS,SAAd,YAA0B8S,GAClCnL,MAAO,CAAEwC,WAAY5K,IAEzBE,UAAWC,KAAO0K,KANtB,SAQI,0BAAS3K,UAAWC,KAAOuN,MAA3B,UACI,yBAAQxN,UAAWC,KAAOE,OAA1B,UACI,mBAAGH,UAAU,gCAAb,SAA8C,IAAMwN,EAAMxB,SAC1D,mBAAGhM,UAAU,kDAAb,SAAgEwC,EAAWgL,EAAMkG,gBAErF,oBAAG1T,UAAWC,KAAOe,KAAO,wCAA5B,UACKwM,EAAMxM,KAAK,uBACXgS,GAAc,sBAAMhT,UAAU,8BAA8BwJ,MAAO,CAACmK,OAlB7DlG,EAkBmFD,EAAMC,OAlB3D,SAAXA,EAAoB,UAAY,YAkB5C,SAzBb,SAACA,GACf,MAAe,SAAXA,EAA0B,mDACf,YAAXA,EAA6B,uCAClB,YAAXA,GAA6B,yDAsBuFmG,CAAUpG,EAAMC,aAEhI,yBAAQzN,UAAWC,KAAO4T,OAA1B,UACI,qBAAK7T,UAAWC,KAAOkT,OAAvB,SAEQA,EAAOxJ,KAAI,SAACmB,EAAOiG,GACf,IAAI+C,EAAY,IAAJ/C,EACZ,OAAIA,GAAKgD,EACG,qBAAa/T,UAAWC,KAAO+T,aAAcxK,MAAO,CAACsK,KAAMA,EAAMG,OAAQ,IAAMlD,GAA/E,SACI,qBAAK/Q,UAAWC,KAAO6K,MAAOD,IAAKC,EAAOC,IAAI,MADxCgG,GA3EhC,IA8EcA,GACQ,sBAAa/Q,UAAWC,KAAO+T,aAAcxK,MAAO,CAACsK,KAAMA,EAAMG,OAAQ,IAAMlD,GAA/E,UACI,mBAAG/Q,UAAWC,KAAO+J,MAAQ,iCAA7B,SAAgE,KAAOA,EAhFjG,EAgFqH,KAC3F,qBAAKhK,UAAWC,KAAO6K,MAAOtB,MAAO,CAACsG,QAAS,IAAMjF,IAAKC,EAAOC,IAAI,OAF/DgG,QAQlC,sBAAK/Q,UAAWC,KAAOiU,MAAvB,UACI,sBAAMlU,UAAU,qCAAhB,SAAsDgL,IACtD,cAAC,eAAD,CAAc1K,KAAK,sBApC1B+S,G,yBCnEJc,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAAiB,iBCIvB,SAASC,KACZ,IAAM9P,EAAWmC,cACT4N,EAAapL,aAAY,SAACC,GAAD,OAAuBA,EAAMmL,YAAtDA,SACR,EAA4B3O,mBAAmB,IAA/C,mBAAO4O,EAAP,KAAeC,EAAf,KACIhP,EAAc5E,EAAU,eAAgB+D,EAAQ,GAgBpD,OAfIa,IAAab,EAAQa,EAAYiP,MAAM,KAAK,IAEhDpK,qBAAU,WAEN,OADA9F,EAAS,CAACpE,KAAM6T,GAAqBU,Q5BNjB,gD4BMyC/P,IACtD,WACHJ,EAAS,CAACpE,KAAMgU,QAErB,CAAC5P,EAAUI,IAEd0F,qBAAU,WAAO,IAAD,GACZ,UAAIiK,EAAS,UAAb,aAAI,EAAaC,SACbC,EAAUF,EAAS,GAAGC,UAE3B,CAACD,IAGA,qBAAKzU,UAAYC,KAAO6U,SAAxB,SAEQvN,QAAQmN,EAAOlN,QACbkN,EAAO/K,KAAI,SAAAW,GAAI,eAAQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMH,mBAAN,eAAmB3C,SAAS,cAACuL,GAAD,CAA4BvF,MAAOlD,EAAM0I,YAAY,GAAtC1I,EAAI,QAClE,mBAAGtK,UAAU,uDAAb,6I,qCChCL+U,GAAiB,SAAC,GAA4E,IAA1E9H,EAAyE,EAAzEA,SAAa+H,EAA4D,mBAClGlH,EAAS/M,EAAU,eAEzB,OACE,cAAC,IAAD,6BACMiU,GADN,IAEEC,OAAQ,gBAAGnV,EAAH,EAAGA,SAAH,OACNgO,EACEb,EAEA,cAAC,IAAD,CACExM,GAAI,CACFF,SAAU,SACV2H,MAAO,CAAEC,KAAMrI,WCPtB,SAASoV,KACZ,IAAMpO,EAAUC,cACVjH,EAAWC,cACX2E,EAAWmC,cACTsO,EAAQC,cAARD,IAQR,OACI,sBAAKnV,UAAYC,KAAOY,QAAxB,UACI,wBAAOb,UAAU,QAAjB,UACI,8BACI,qBAAIA,UAAWC,KAAOoV,QAAtB,UACI,oBAAIrV,UAAWC,KAAOI,QAAtB,SACI,cAAC,IAAD,CAASG,OAAK,EAACC,GAAE,UAAK0U,GAAOnV,UAAU,iDAAiDU,gBAAiBT,KAAOU,OAAhH,0DAIJ,oBAAIX,UAAWC,KAAOI,QAAtB,SACI,cAAC,IAAD,CAASG,OAAK,EAACC,GAAE,UAAK0U,EAAL,WAAmBnV,UAAU,iDAAiDU,gBAAiBT,KAAOU,OAAvH,qGAIJ,oBAAIX,UAAWC,KAAOI,QAAtB,SACI,mBAAGyS,KAAK,KAAKvJ,QAtBtB,SAACzB,GACZA,EAAEC,iBACFrD,EAASD,KACRS,MAAK,kBAAM4B,EAAQxF,QAAQ,CAAEf,SAAU,eAmBUP,UAAU,iDAAxC,mDAMZ,yBAAQA,UAAU,QAAlB,UACI,mBAAGA,UAAU,kDAAb,0IACA,mBAAGA,UAAU,kDAAb,SAE8B,oBAAtBF,EAASS,SAAiC,oLAAqC,kMAK/F,yBAASP,UAAWC,KAAOmR,QAA3B,SACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAgB5Q,OAAK,EAAC8U,KAAI,UAAKH,GAA/B,SACI,cAAC9C,GAAD,MAEJ,cAAC,GAAD,CAAgB7R,OAAK,EAAC8U,KAAI,UAAKH,EAAL,WAA1B,SACI,cAACX,GAAD,c,wBClDjB,SAASe,KACZ,IAAM7Q,EAAWmC,cACT4N,EAAapL,aAAY,SAACC,GAAD,OAAuBA,EAAMmL,YAAtDA,SACR,EAA4B3O,mBAAmB,IAA/C,mBAAO4O,EAAP,KAAeC,EAAf,KACA,EAA4C7O,mBAAqB,IAAjE,mBAAO0P,EAAP,KAAuBC,EAAvB,KACA,EAAsC3P,mBAAqB,IAA3D,mBAAO4P,EAAP,KAAoBC,EAApB,KACA,EAA0B7P,mBAAS,GAAnC,mBAAO8P,EAAP,KAAcC,EAAd,KACA,EAAoC/P,mBAAS,GAA7C,mBAAOgQ,EAAP,KAAmBC,EAAnB,KAEAvL,qBAAU,WAEN,OADA9F,EAAS,CAACpE,KAAM,sBAAuBuU,Q/BPvB,+C+BQT,WACHnQ,EAAS,CAACpE,KAAM,4BAErB,CAACoE,IAEJ8F,qBAAU,WAAO,IAAD,GACZ,UAAIiK,EAAS,UAAb,aAAI,EAAaC,UACbC,EAAUF,EAAS,GAAGC,QACtBmB,EAASpB,EAAS,GAAGmB,OACrBG,EAActB,EAAS,GAAGqB,eAE/B,CAACrB,IAEJjK,qBAAU,WACN,GAAIkK,EAAOlN,OAAQ,CACf,IAAMwO,EAAUtB,EAAOjK,QAAO,SAAAH,GAAI,MAAoB,YAAhBA,EAAKmD,UACrCrB,EAAOsI,EAAOjK,QAAO,SAAAH,GAAI,MAAoB,SAAhBA,EAAKmD,UACxCgI,EAAkBQ,EAAWD,EAAS,KACtCL,EAAeM,EAAW7J,EAAM,QAErC,CAACsI,IAEJ,IAAMuB,EAAa,SAACC,EAAUxN,GAAX,OAA4BwN,EAAIjI,QAAO,SAACkI,EAAQC,GAG/D,OAFID,EAAEA,EAAE3O,OAAO,GAAGA,SAAWkB,GAAMyN,EAAEvF,KAAK,IAC1CuF,EAAEA,EAAE3O,OAAO,GAAGoJ,KAAKwF,GACZD,IACR,CAAC,MAEJ,OACI,gCACI,wBAAQnW,UAAYC,KAAOE,OAA3B,SACI,oBAAIH,UAAU,sCAAd,yFAEJ,0BAASA,UAAYC,KAAOmR,QAA5B,UACI,qBAAKpR,UAAYC,KAAOoW,KAAxB,SACM9O,QAAQmN,EAAOlN,SAAWkN,EAAO/K,KAAI,SAAAW,GAAI,eAAQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMH,mBAAN,eAAmB3C,SAAS,cAACuL,GAAD,CAA4BvF,MAAOlD,EAAM0I,YAAY,GAAtC1I,EAAI,UAGlG,sBAAKtK,UAAYC,KAAOqW,SAAxB,UACI,sBAAKtW,UAAYC,KAAOsW,gBAAxB,UACI,0BAASvW,UAAYC,KAAOuW,SAA5B,UACI,wBAAQxW,UAAU,kCAAlB,mDACA,qBAAKA,UAAYC,KAAOwW,gBAAxB,SAEQf,EAAYlO,QAAUkO,EAAY,GAAGlO,OACnCkO,EAAY/L,KAAI,SAAC+M,EAAmB3F,GAApB,OACd,qBAAa/Q,UAAYC,KAAO0W,eAAhC,SACMD,EAAkB/M,KAAI,SAAAW,GAAI,OAAI,sBAAwBtK,UAAYC,KAAOmM,KAAO,iCAAlD,SAAsF9B,EAAK0B,QAAhF1B,EAAK0B,YAD1C+E,MAGZ,mBAAG/Q,UAAU,iDAAb,qCAId,oCACI,wBAAQA,UAAU,kCAAlB,0DACA,qBAAKA,UAAYC,KAAOwW,gBAAxB,SAEQjB,EAAehO,QAAUgO,EAAe,GAAGhO,OACzCgO,EAAe7L,KAAI,SAACiN,EAAsB7F,GAAvB,OACjB,qBAAa/Q,UAAYC,KAAO0W,eAAhC,SACMC,EAAqBjN,KAAI,SAAAW,GAAI,OAAI,sBAAwBtK,UAAU,gCAAlC,SAAmEsK,EAAK0B,QAA7D1B,EAAK0B,YAD7C+E,MAGZ,mBAAG/Q,UAAU,iDAAb,wCAKlB,gCACI,mBAAGA,UAAU,mCAAb,oIACA,mBAAGA,UAAU,8BAAb,SAA4C4V,IAE5C,mBAAG5V,UAAU,mCAAb,6HACA,mBAAGA,UAAU,8BAAb,SAA4C8V,gB,wBCpFrD,SAASe,KACpB,IAAQ1M,EAAgBd,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAzDA,YACAoE,EAAOuI,cAAPvI,GACR,EAAoCzI,mBAA6B,MAAjE,mBAAOiE,EAAP,KAAmBgN,EAAnB,KAOA,OALAvM,qBAAU,WACN,IAAMgJ,EAAmBrJ,EAAYM,QAAO,SAAAH,GAAI,OAAIA,EAAI,MAAYiE,KAAI,GACxEwI,EAAcvD,KACf,CAACrJ,EAAaoE,IAGbxE,EAEI,qCACI,mBAAG/J,UAAU,4BAAb,qHACA,yBAAQA,UAAWC,KAAO8J,WAA1B,UACI,4BAAG,qBAAK/J,UAAWC,KAAO6K,MAAOD,IAAKd,EAAU,YAAiBgB,IAAKhB,EAAW/I,SACjF,4BAAYhB,UAAU,6BAAtB,SAAoD+J,EAAW/I,UAEnE,0BAAShB,UAAWC,KAAOkM,QAA3B,UACI,sBAAKnM,UAAU,sBAAf,UACI,mBAAGA,UAAU,mCAAb,kFACA,mBAAGA,UAAU,gCAAb,SAA8C+J,EAAWiN,cAE7D,sBAAKhX,UAAU,sBAAf,UACI,mBAAGA,UAAU,mCAAb,oDACA,mBAAGA,UAAU,gCAAb,SAA8C+J,EAAWkN,cAE7D,sBAAKjX,UAAU,sBAAf,UACI,mBAAGA,UAAU,mCAAb,8CACA,mBAAGA,UAAU,gCAAb,SAA8C+J,EAAWmN,SAE7D,sBAAKlX,UAAU,sBAAf,UACI,mBAAGA,UAAU,mCAAb,sEACA,mBAAGA,UAAU,gCAAb,SAA8C+J,EAAWoN,yBAIrE,6B,yBC1CL,SAASC,KACZ,OACI,qBAAKpX,UAAWC,KAAOkK,YAAvB,SACI,cAAC0M,GAAD,M,wBCHCQ,GAAc,WACzB,OACE,sBAAKrX,UAAWC,KAAOqX,UAAvB,UACE,mBAAGtX,UAAU,8BAAb,iBACE,uBACA,cAAC,IAAD,CAAMS,GAAG,IAAIT,UAAWC,KAAO0K,KAA/B,qK,oBCEO,SAAS4M,KACpB,MAA6ClO,aAAY,SAACC,GAAD,OAAuBA,EAAMkE,SAA9EA,EAAR,EAAQA,MAAOgK,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,YACrBtN,EAAgBd,aAAY,SAACC,GAAD,OAAuBA,EAAMa,eAAzDA,YACFzF,EAAWmC,cACT0H,EAAOuI,cAAPvI,GACR,EAAgDzI,mBAA+B,MAA/E,mBAAOmN,EAAP,KAAyBC,EAAzB,KACA,EAA0BpN,mBAAS,GAAnC,mBAAOkF,EAAP,KAAc6C,EAAd,KAEArD,qBAAU,WACN9F,ECTD,SAAmB6J,GACtB,OAAO,SAAS7J,GAGZ,OAFAA,EAAS,CAACpE,KAAM4D,IAETU,IACN+N,IpCFmB,gDoCEApE,GACnBrJ,MAAwB,SAACC,GAKtB,OAJAT,EAAS,CACLpE,KAAM8D,EACNoJ,MAAOrI,EAASE,KAAKqP,OAAO,KAEzBvP,EAASE,QAEnBC,OAAM,WACHZ,EAAS,CACLpE,KAAM6D,QDNLuT,CAASnJ,MACnB,CAAC7J,EAAU6J,IAEd/D,qBAAU,WACN,GAAIL,EAAY3C,OAAQ,CAAC,IAAD,IAChBwG,EAAa,EACbxC,EAAM,EACL,OAALgC,QAAK,IAALA,GAAA,UAAAA,EAAOrD,mBAAP,SAAoBoJ,SAAQ,SAAAxJ,GACxB,IAAIyJ,EAAmBrJ,EAAYM,QAAO,SAAAH,GAAI,OAAIA,EAAI,MAAYP,KAAY,GAChD,QAA1ByJ,EAAiBlT,MAAmBkL,IACpCwC,GAAc,EAAIwF,EAAiBxI,MACnCQ,EAAM,GAEqB,QAA1BgI,EAAiBlT,OACtB0N,GAAcwF,EAAiBxI,UAEnC6C,EAASG,GAET,IAAI2J,EAAsB,IAAIC,IAC1BC,EAAwC,GACvC,OAALrK,QAAK,IAALA,GAAA,UAAAA,EAAOrD,mBAAP,SAAoBoJ,SAAQ,SAAAjJ,GAAI,OAAIqN,EAAoBG,IAAIxN,MAC5DqN,EAAoBpE,SAAQ,SAAA7R,GAAK,OAAImW,EAAuBjH,KAAKzG,EAAYM,QAAO,SAAAV,GAAU,OAAIA,EAAU,MAAYrI,KAAO,OAC/HmW,EAAuBtE,SAAQ,SAAAjJ,GACb,QAAdA,EAAKhK,KACCgK,EAAKN,MAAQ,EACbM,EAAKN,MAAL,OAAawD,QAAb,IAAaA,OAAb,EAAaA,EAAOrD,YAAYM,QAAO,SAAAV,GAAU,OAAIA,IAAeO,EAAI,OAAS9C,UAE3F0L,EAAoB2E,MAGzB,CAAC1N,EAAaqD,IAEjB,IAOwBC,EAExB,OAAIgK,EAAoB,mBAAGzX,UAAU,kDAAb,oQACfwX,EAAqB,mBAAGxX,UAAU,kDAAb,sGAGtBwN,GACA,0BAASxN,UAAWC,KAAO8X,UAA3B,UACI,wBAAQ/X,UAAU,qCAAlB,SAAwD,IAAMwN,EAAMxB,SACpE,mBAAGhM,UAAU,mCAAb,SAAiDwN,EAAMxM,OACvD,mBAAGhB,UAAU,mCAAb,SACI,sBAAMwJ,MAAO,CAACmK,OAXNlG,EAW4BD,EAAMC,OAXJ,SAAXA,EAAoB,UAAY,YAW3D,SAlBE,SAACA,GACf,MAAe,SAAXA,EAA0B,mDACf,YAAXA,EAA6B,uCAClB,YAAXA,GAA6B,yDAegCmG,CAAUpG,EAAMC,YAEzE,mBAAGzN,UAAU,wCAAb,mDACA,qBAAKA,UAAWC,KAAO+X,aAAe,QAAtC,SAEQzQ,QAAQ0L,KAAR,OACIA,QADJ,IACIA,OADJ,EACIA,EAAkBtJ,KAAI,SAACI,EAAYgH,GAC/B,OAAQ,sBAAa/Q,UAAWC,KAAOuN,MAAQ,aAAvC,UACI,sBAAKxN,UAAWC,KAAOgY,KAAvB,UACI,qBAAKjY,UAAWC,KAAO+T,aAAe,QAAtC,SACI,qBAAKhU,UAAWC,KAAO6K,MAAOD,IAAKd,EAAWmO,aAAcnN,IAAI,OAEpE,qBAAK/K,UAAWC,KAAOe,KAAO,+BAA9B,SACK+I,EAAW/I,UAIpB,sBAAKhB,UAAWC,KAAO+K,MAAQ,iCAA/B,UACI,uBAAMhL,UAAU,OAAhB,UACM+J,EAAWC,OAASD,EAAWC,MAAQ,GAAMD,EAAWC,MAAQ,MACjED,EAAWiB,SAEhB,cAAC,eAAD,CAAc1K,KAAK,iBAfjByQ,SAqBlC,yBAAQ/Q,UAAWC,KAAO4T,OAAS,cAAnC,UACI,mBAAG7T,UAAU,kDAAb,SAAgEwC,EAAWgL,EAAMkG,aACjF,sBAAK1T,UAAWC,KAAO+K,MAAQ,iCAA/B,UACI,sBAAMhL,UAAU,OAAhB,SACKgL,IAEL,cAAC,eAAD,CAAc1K,KAAK,qB,yBEpGpC,SAAS6X,KACZ,OACI,qBAAKnY,UAAWC,KAAOmY,UAAvB,SACI,cAACb,GAAD,M,oBCHCc,GAA4B,SAAC,GAA4E,IAA1EpL,EAAyE,EAAzEA,SAAa+H,EAA4D,mBAC7GlH,EAAS/M,EAAU,eACnBuX,EAAmBvT,aAAawT,QAAQ,iBAE9C,OACE,cAAC,IAAD,6BACMvD,GADN,IAEEC,OAAQ,gBAAGnV,EAAH,EAAGA,SAAH,OACLgO,GAA+B,SAArBwK,EAGT,cAAC,IAAD,CACE7X,GAAI,CACFF,SAAU,IACV2H,MAAO,CAAEC,KAAMrI,MALnBmN,O,gBCTGuL,GAAuB,SAAC,GAA4E,IAA1EvL,EAAyE,EAAzEA,SAAa+H,EAA4D,mBACxGlH,EAAS/M,EAAU,eAEzB,OACE,cAAC,IAAD,6BACMiU,GADN,IAEEC,OAAQ,gBAAGnV,EAAH,EAAGA,SAAH,OACLgO,EAGC,cAAC,IAAD,CACErN,GAAI,CACFF,SAAU,IACV2H,MAAO,CAAEC,KAAMrI,MALnBmN,O,0CCTK,SAASwL,KACpB,OAAQ,qBAAKzY,UAAWC,KAAO4M,UCCnC,IAAM6L,GAAaxX,SAAS6L,eAAe,UAE5B,SAAS4L,GAAQhX,GAC5B,IAAQ2M,EAAS3M,EAAT2M,KAER,OAAOpB,IAASC,aAEV,qCACE,qBAAKnN,UAAWC,KAAO0E,OAAvB,SACI,mBAAG3E,UAAU,8BAAb,SAA4CsO,MAEhD,cAACmK,GAAD,OAGJC,ICFO,SAASE,KACtB,IAAMC,EAAc,WAClB,IAAQlU,EAAW0E,IAAY,SAACC,GAAD,OAAuBA,EAAM3E,UAApDA,OACFD,EAAWmC,KACX/G,EAAWC,cACX+G,EAAUC,cACV2D,GAAiC,SAAnB5D,EAAQgS,QAAwC,YAAnBhS,EAAQgS,SAAyBhZ,EAASoI,OAASpI,EAASoI,MAAMwC,WAE7G4B,EAAU,SAACxE,GACZA,GAAGA,EAAEiR,kBACRjS,EAAQkS,UAOV,OAJAxO,qBAAU,WACR9F,GlClBK,SAASA,GACZA,EAAS,CAACpE,KAAM+C,IAChBqB,EAAS,CAACpE,KAAM2D,EAAaU,QAAQ,IAErCsU,MRhByB,qDQiBxB/T,MAA2B,SAACgU,GACzB,OAAIA,EAAIC,GAAWD,EAAIE,OAChBC,QAAQC,OAAOJ,EAAIzL,WAE7BvI,MAAK,SAAAiF,GACFzF,EAAS,CACLpE,KAAMiD,EACN4G,YAAaA,EAAY9E,UAGhCC,OAAM,WACHZ,EAAS,CACLpE,KAAMgD,OAGbmC,SAAQ,kBAAMf,EAAS,CACpBpE,KAAM2D,EAAaU,QAAQ,YkCFhC,CAACD,IAGF,sBAAK1E,UAAU,MAAf,UACI,cAACH,EAAD,IACA,uBAAMG,UAAYC,IAAO2L,KAAzB,UACI,eAAC,IAAD,CAAQ9L,SAAU4K,GAAc5K,EAAhC,UACE,cAAC,IAAD,CAAOwV,KAAI,IAAO9U,OAAK,EAAvB,SACE,cAACyQ,GAAD,MAEF,cAAC,GAAD,CAAsBqE,KAAI,SAAY9U,OAAK,EAA3C,SACE,cAACqF,EAAD,MAEF,cAAC,IAAD,CAAOyP,KAAI,YAAe9U,OAAK,EAA/B,SACE,cAACmI,EAAD,MAEF,cAAC,GAAD,CAAsB2M,KAAI,mBAAsB9U,OAAK,EAArD,SACE,cAACgR,GAAD,MAEF,cAAC,GAAD,CAA2B8D,KAAI,kBAAqB9U,OAAK,EAAzD,SACE,cAACkR,GAAD,MAEF,cAAC,IAAD,CAAO4D,KAAI,QAAW9U,OAAK,EAA3B,SACE,cAAC+U,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAI,YAAe9U,OAAK,EAA/B,SACE,cAAC2X,GAAD,MAEF,cAAC,GAAD,CAAgB7C,KAAI,sBAAyB9U,OAAK,EAAlD,SACE,cAAC2X,GAAD,MAEF,cAAC,GAAD,CAAgB7C,KAAI,WAApB,SACE,cAACJ,GAAD,MAEF,cAAC,IAAD,CAAOI,KAAI,mBAAsB9U,OAAK,EAAtC,SACE,cAAC4W,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,GAAD,SAIH1M,GACC,cAAC,IAAD,CACE4K,KAAK,mBACLrI,SACE,cAAC,GAAD,CAAOX,QAASA,EAAhB,SACE,cAACuK,GAAD,QAMPnM,GACC,cAAC,IAAD,CACE4K,KAAK,YACLrI,SACE,cAAC,GAAD,CAAOX,QAASA,EAAhB,SACE,cAACiL,GAAD,QAMP7M,GACC,cAAC,IAAD,CACE4K,KAAK,sBACLrI,SACE,cAAC,GAAD,CAAOX,QAASA,EAAhB,SACE,cAACiL,GAAD,WAOZ5S,GAAU,cAACgU,GAAD,CAAQrK,KAAM,4DAMhC,OACE,cAAC,IAAD,UACE,cAACuK,EAAD,MCjHN,IAYeU,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBvU,MAAK,YAAkD,IAA/CwU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,mBCKRO,GAAkC,CACtC3Q,UAAW,kCAQP4Q,GAAiD,CACrD7P,YAAa,GACb+G,oBAAoB,EACpBC,mBAAmB,EACnBjH,YAAa,ICnBT+P,GAAiC,CACnCjO,OAAQ,GACRC,eAAe,EACfC,cAAc,GCLZ+N,GAA4B,CAChCtV,QAAQ,GCEJsV,GAAwB,CAC5BC,aAAa,EACbzF,SAAU,GACVlP,MAAO,ICHH4U,GAAgC,CACpC3M,MAAO,KACPgK,cAAc,EACdC,aAAa,GCJT2C,GAA8B,CAClClI,KAAM,KACNmI,aAAa,EACbC,YAAY,GCHDC,GAAcC,aAAgB,CACvCrQ,YNqB8B,WAAuD,IAAtDjC,EAAqD,uDAA7C8R,GAAyBlB,EAAoB,uCACtF,OAAQA,EAAOxY,MACb,KAAK+C,EACH,OAAO,6BACF6E,GADL,IAEEgJ,oBAAoB,EACpBC,mBAAmB,IAGvB,KAAK5N,EACH,OAAO,6BACA2E,GADP,IAEIiC,YAAa2O,EAAO3O,YACpB+G,oBAAoB,IAG1B,KAAK5N,EACH,OAAO,6BACA4E,GADP,IAEIiJ,mBAAmB,EACnBD,oBAAoB,IAG1B,KAAK1N,EACH,OAAO,6BACF0E,GADL,IAEEgC,YAAa4O,EAAOnI,cAExB,KAAK9M,EACH,OAAO,6BACFqE,GADL,IAEEgC,YAAgC,QAAnB4O,EAAOvI,GAAGjQ,KAAV,uBACL4H,EAAMgC,YAAYO,QAAO,SAAAH,GAAI,MAAkB,QAAdA,EAAKhK,SADjC,CACkDwY,EAAOvI,KADzD,uBAELrI,EAAMgC,aAFD,CAEc4O,EAAOvI,OAGtC,KAAKxM,EACH,OAAO,6BACFmE,GADL,IAEEgC,YAAa,KAGjB,KAAKpG,EACH,OAAO,6BAAKoE,GAAZ,IAAmBgC,YAAa,aAAIhC,EAAMgC,aAAaO,QAAO,SAAAV,GAAU,OAAIA,EAAW0E,YAAcqK,EAAOrK,eAE9G,KAAKzK,EACH,OAAO,6BACFkE,GADL,IAEEgC,YAAY,aAAKhC,EAAMgC,YAAYP,KAAI,SAAAW,GACrC,OAAO,6BACFA,GADL,IAEEmE,UAAWgM,QAAwB,IAAhBC,KAAKC,UAAkBC,QAAQ,YAI1D,QACE,OAAO1S,IM5ETkB,UNQ4B,WAAuD,IAAtDlB,EAAqD,uDAA7C6R,GAAiBjB,EAA4B,uCACpF,OAAIA,EAAOxY,OAASmD,EAAmB,CAAE2F,UAAW0P,EAAO1P,WACpDlB,GMTL6D,YLG8B,WAA4C,IAA3C7D,EAA0C,uDAAlC+R,GAAcnB,EAAoB,uCACzE,OAAQA,EAAOxY,MACb,KAAKoD,EACH,OAAO,6BACFwE,GADL,IAEE+D,eAAe,EACfC,cAAc,IAGlB,KAAKtI,EACH,OAAO,6BACAsE,GADP,IAEI8D,OAAQ8M,EAAO9M,OACfC,eAAe,IAGrB,KAAKtI,EACH,OAAO,6BACAuE,GADP,IAEIgE,cAAc,EACdD,eAAe,IAGrB,QACE,OAAO/D,IK1BXvD,OJFyB,WAAiD,IAAhDuD,EAA+C,uDAAvC+R,GAAcnB,EAAyB,uCACzE,OAAQA,EAAOxY,MACb,KAAK2D,EACH,MAAO,CACHU,OAAQmU,EAAOnU,QAGrB,QACE,OAAOuD,IILXuM,SHEqB,WAA4C,IAA3CvM,EAA0C,uDAAlC+R,GAAcnB,EAAoB,uCAClE,OAAQA,EAAOxY,MACb,KAAK8T,GACH,OAAO,6BACFlM,GADL,IAEE3C,MAAO,KACP2U,aAAa,IAGjB,KAAK7F,GACH,OAAO,6BACFnM,GADL,IAEE3C,MAAOuT,EAAOjE,QACdqF,aAAa,IAGjB,KAAK5F,GACH,MAAO,CACLG,SAAU,GACVlP,MAAO,KACP2U,aAAa,GAGjB,KAAK3F,GACH,OAAO,6BACFrM,GADL,IAEE3C,MAAO,KACPkP,SAAU,CAACqE,EAAOjE,WAEtB,QACE,OAAO3M,IG/BTsF,MFCwB,WAAiD,IAAhDtF,EAA+C,uDAAvCiS,GAAmBrB,EAAoB,uCAC1E,OAAQA,EAAOxY,MACb,KAAK4D,EACH,OAAO,6BACFgE,GADL,IAEEsP,cAAc,EACdC,aAAa,IAGjB,KAAKrT,EACH,OAAO,6BACA8D,GADP,IAEIsF,MAAOsL,EAAOtL,MACdgK,cAAc,IAGpB,KAAKrT,EACH,OAAO,6BACA+D,GADP,IAEIuP,aAAa,EACbD,cAAc,IAGpB,KAAKnT,EACH,OAAO,6BACF6D,GADL,IAEEsF,MAAO,OAGX,QACE,OAAOtF,IE9BTgK,KDDuB,WAAgD,IAA/ChK,EAA8C,uDAAtCkS,GAAkBtB,EAAoB,uCACxE,OAAQA,EAAOxY,MACb,KAAKgE,EACH,OAAO,6BACF4D,GADL,IAEEmS,aAAa,EACbC,YAAY,IAGhB,KAAK9V,EACH,OAAO,6BACA0D,GADP,IAEIgK,KAAM4G,EAAO5G,KACbmI,aAAa,IAGnB,KAAK9V,EACH,OAAO,6BACA2D,GADP,IAEIoS,YAAY,EACZD,aAAa,IAGnB,QACE,OAAOnS,ME3BP2S,IADmBnO,OAAOoO,sCAAwCC,MACtCC,aAAgBC,MAAQD,cCCjD,SAAC1R,GACN,IAAI4R,EAAc,KAElB,OAAO,SAACC,GAAD,OAAe,SAACrC,GACrB,IAAQpU,EAAa4E,EAAb5E,SACApE,EAAkBwY,EAAlBxY,KAAMuU,EAAYiE,EAAZjE,QAKd,GAHIvU,IAAS6T,KACX+G,EAAS,IAAIE,UAAUvG,IAErBqG,IACAA,EAAOG,OAAS,SAACC,GACjB5W,EAAS,CAAEpE,KAAM8T,GAAuBS,QAASyG,KAGnDJ,EAAOK,QAAU,SAACD,GAChB5W,EAAS,CAAEpE,KAAM+T,GAAqBQ,QAASyG,KAGjDJ,EAAOM,UAAY,SAACF,GAClB,IAAQjW,EAASiW,EAATjW,KACFoW,EAAaC,KAAKC,MAAMtW,GAC9BX,EAAS,CAAEpE,KAAMiU,GAAgBM,QAAS4G,KAG5CP,EAAOU,QAAU,SAACN,GAChB5W,EAAS,CAAEpE,KAAMgU,GAAsBO,QAASyG,KzB/B3B,oByBkCnBhb,GAA0B,CAC5B,IAAMub,EAAUhH,EAChBqG,EAAOY,KAAKJ,KAAKK,UAAUF,IAI/BV,EAAKrC,SCvCLxP,GFKmB,eAAC2Q,EAAD,uDAAgB,GAAhB,OAAuB+B,aAAYzB,GAAaN,EAAcY,IELzEoB,GAEd/O,IAAS+H,OACP,cAAC,IAAMiH,WAAP,UACE,cAAC,IAAD,CAAU5S,MAAOA,GAAjB,SACE,cAACsP,GAAD,QAGJ1X,SAAS6L,eAAe,SAM1BwM,M,mBCrBA5Z,EAAOC,QAAU,CAAC,QAAU,sBAAsB,OAAS,qBAAqB,KAAO,mBAAmB,SAAW,uBAAuB,gBAAkB,8BAA8B,SAAW,uBAAuB,gBAAkB,8BAA8B,eAAiB,6BAA6B,KAAO,qB,mBCAnUD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,KAAO,yBAAyB,QAAU,4BAA4B,QAAU,4BAA4B,OAAS,2BAA2B,KAAO,2B,mBCAnPD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,4BAA4B,MAAQ,qBAAqB,OAAS,sBAAsB,aAAe,4BAA4B,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,uB,mBCApSD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,0B,mBCAvKD,EAAOC,QAAU,CAAC,kBAAoB,8CAA8C,IAAM,gCAAgC,UAAY,sCAAsC,iBAAmB,6CAA6C,MAAQ,oC,mBCApPD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,4B,mBCAtED,EAAOC,QAAU,CAAC,WAAa,uCAAuC,MAAQ,kCAAkC,QAAU,sC,mBCA1HD,EAAOC,QAAU,CAAC,YAAc,uCAAuC,MAAQ,mC,mBCA/ED,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,uB,mBCAvDD,EAAOC,QAAU,CAAC,UAAY,mDAAmD,MAAQ,iD,mBCAzFD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,OAAS,uB,mBCA3DD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.3e45ee87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__WfDXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"burger-ingredients_ingredients__3mMTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"order-details_details__23tF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__10ETy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totalPrice\":\"total-price_totalPrice__CYUUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileForm\":\"profile_profileForm__2EfV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userFeed\":\"orders_userFeed__2PwZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredients_ingredients__2xgkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderPage\":\"order_orderPage__2ejdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3Yf5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"loader-overlay_overlay__3q8Iv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"feed-item_order__1lR-d\",\"header\":\"feed-item_header__3gCPN\",\"footer\":\"feed-item_footer__1SgBC\",\"images\":\"feed-item_images__qgW7A\",\"imageWrapper\":\"feed-item_imageWrapper__3uqn1\",\"image\":\"feed-item_image__1bE2G\",\"count\":\"feed-item_count__3vfrH\",\"coast\":\"feed-item_coast__1GZx7\",\"name\":\"feed-item_name__YvBE1\"};","import { Logo } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { BurgerIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { ListIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './app-header.module.css'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\nexport default function AppHeader() {\r\n    const location = useLocation()\r\n    \r\n    return (\r\n        <div className={ styles.wrapper }>\r\n          <header className={ styles.header }>\r\n              <nav className='nav'>\r\n                  <ul className={ styles.list }>\r\n                      <li className={ styles.navItem }>\r\n                        <BurgerIcon type={ location.pathname === '/' ? 'primary' : 'secondary'}/>\r\n                        <NavLink\r\n                            exact={true}\r\n                            to={`/`}\r\n                            className='text text_type_main-default text_color_inactive pl-2'\r\n                            activeClassName={styles.active}>Конструктор</NavLink>\r\n                      </li>\r\n                      <li className={ styles.navItem }>\r\n                          <ListIcon type={ location.pathname === '/feed' ? 'primary' : 'secondary'}/>\r\n                          <NavLink\r\n                            exact={true}\r\n                            to={`/feed`}\r\n                            className='text text_type_main-default text_color_inactive pl-2'\r\n                            activeClassName={styles.active}>Лента заказов</NavLink>\r\n                      </li>\r\n                  </ul>\r\n              </nav>\r\n              <section className={ styles.logo }>\r\n                    <NavLink exact={true} to={`/`}><Logo /></NavLink>\r\n              </section>                               \r\n              <section className={ styles.profile }>\r\n                  <ProfileIcon type={ ~location.pathname.indexOf('/profile') ? 'primary' : 'secondary'}/>\r\n                  <NavLink\r\n                        to={`/profile`}\r\n                        className='text text_type_main-default text_color_inactive pl-2'\r\n                        activeClassName={styles.active}>Личный кабинет</NavLink>\r\n              </section>\r\n          </header>\r\n        </div>\r\n    )\r\n}\r\n","export function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n      // eslint-disable-next-line\r\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined\r\n  }\r\n  \r\n  export function setCookie(name: string, value: string, props?: any) {\r\n    props = props || {}\r\n    let exp = props.expires\r\n    if (typeof exp == 'number' && exp) {\r\n      const d = new Date()\r\n      d.setTime(d.getTime() + exp * 1000)\r\n      exp = props.expires = d\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n      props.expires = exp.toUTCString()\r\n    }\r\n    value = encodeURIComponent(value)\r\n    let updatedCookie = name + '=' + value\r\n    for (const propName in props) {\r\n      updatedCookie += '; ' + propName\r\n      const propValue = props[propName]\r\n      if (propValue !== true) {\r\n        updatedCookie += '=' + propValue\r\n      }\r\n    }\r\n    document.cookie = updatedCookie\r\n  }\r\n  \r\n  export function deleteCookie(name: string) {\r\n    setCookie(name, '', { expires: -1 })\r\n  }\r\n\r\n  export const minPasswordLength = 6\r\n\r\n  export const emailRegExp = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n\r\n  export const formatDate = (date: Date): string => {\r\n    let today = new Date()\r\n    let targetDate = new Date(date)\r\n    let hours: string | number = targetDate.getHours()\r\n    let minutes: string | number = targetDate.getMinutes()\r\n    if (hours < 10) hours = '0' + hours\r\n    if (minutes < 10) minutes = '0' + minutes\r\n    let msInDay = 24 * 60* 60 * 1000\r\n    today.setHours(0,0,0,0)\r\n    targetDate.setHours(0,0,0,0)\r\n    let dif: string | number = (+today - +targetDate)/msInDay\r\n    if (dif === 0) dif = 'Сегодня'\r\n    if (dif === 1) dif = 'Вчера'\r\n    if (dif > 1) dif = dif + ' дн. назад'\r\n    let timeZone = (targetDate.getTimezoneOffset())/60\r\n    return dif + ', ' + hours + ':' + minutes + ' i-GMT' + (timeZone > 0 ? timeZone : '+'  + timeZone * -1)\r\n  }\r\n  ","export const getIngredientsUrl = 'https://norma.nomoreparties.space/api/ingredients'\r\nexport const getOrderNumberUrl = 'https://norma.nomoreparties.space/api/orders'\r\n\r\nexport const registrUrl = 'https://norma.nomoreparties.space/api/auth/register'\r\nexport const loginUrl = 'https://norma.nomoreparties.space/api/auth/login'\r\nexport const logoutUrl = 'https://norma.nomoreparties.space/api/auth/logout'\r\nexport const refrechTokenUrl = 'https://norma.nomoreparties.space/api/auth/token'\r\nexport const profileUrl = 'https://norma.nomoreparties.space/api/auth/user'\r\nexport const forgotPasswordUrl = 'https://norma.nomoreparties.space/api/password-reset'\r\nexport const resetPasswordUrl = 'https://norma.nomoreparties.space/api/password-reset/reset'\r\n\r\nexport const feedsUrl = 'wss://norma.nomoreparties.space/orders/all'\r\nexport const feedsUserUrl = 'wss://norma.nomoreparties.space/orders?token='\r\nexport const orderItemUrl = 'https://norma.nomoreparties.space/api/orders/'","export const GET_INGREDIENTS = 'GET_INGREDIENTS'\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED'\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS'\r\nexport const REORDER_INGREDIENTS = 'REORDER_INGREDIENTS'\r\n\r\nexport const ACTIVE_TAB = 'ACTIVE_TAB'\r\n\r\nexport const GET_ODDER_NUMBER = 'GET_ODDER_NUMBER'\r\nexport const GET_ODDER_NUMBER_FAILED = 'GET_ODDER_NUMBER_FAILED'\r\nexport const GET_ODDER_NUMBER_SUCCESS = 'GET_ODDER_NUMBER_SUCCESS'\r\n\r\nexport const ADD_TO_CONSTRUCTOR = 'ADD_TO_CONSTRUCTOR'\r\nexport const DEL_FROM_CONSTRUCTOR = 'DEL_FROM_CONSTRUCTOR'\r\nexport const CLEAR_CONSTRUCTOR = 'CLEAR_CONSTRUCTOR'\r\n\r\nexport const SET_UNIQUE_KEY = 'SET_UNIQUE_KEY'\r\n\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\n\r\nexport const GET_ORDER = 'GET_ORDER'\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED'\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS'\r\nexport const CLEAR_ORDER = 'CLEAR_ORDER'\r\n\r\nexport const GET_USER = 'GET_USER'\r\nexport const GET_USER_FAILED = 'GET_USER_FAILED'\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS'","import { setCookie, deleteCookie } from '../../utils'\r\nimport { loginUrl, registrUrl, logoutUrl, refrechTokenUrl } from '../../url'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport { LoaderAction } from './loader.types'\r\nimport { Dispatch } from 'react'\r\nimport { TLoginUserResponse, TRegisterUserResponse, TLogoutUserResponse, TRefreshTokenResponse } from './auth.types'\r\n\r\nimport {\r\n    SHOW_LOADER\r\n} from './actionTypes'\r\n\r\nexport function loginUser (data: { email: string; password: string }) {\r\n    return function(dispatch: Dispatch<LoaderAction>) {\r\n        dispatch({\r\n            type: SHOW_LOADER, loader: true\r\n        })\r\n        \r\n        return axios\r\n        .post(loginUrl, data, {\r\n            headers: {'Content-Type': 'application/json;charset=utf-8'}\r\n        })\r\n        .then<TLoginUserResponse>((response: AxiosResponse) => {\r\n            setCookie('accessToken', response.data.accessToken)\r\n            localStorage.setItem('refreshToken', response.data.refreshToken)\r\n            return response.data         \r\n        })\r\n        .catch(error => {   \r\n            console.error(error)\r\n        })\r\n        .finally(() => dispatch({\r\n            type: SHOW_LOADER, loader: false\r\n        }))\r\n    }\r\n}\r\n\r\nexport function registerUser (data: { email: string; password: string; name: string }) {\r\n    return function(dispatch: Dispatch<LoaderAction>) {    \r\n        dispatch({\r\n            type: SHOW_LOADER, loader: true\r\n        })\r\n        \r\n        return axios\r\n        .post(registrUrl, data, {\r\n            headers: {'Content-Type': 'application/json;charset=utf-8'}\r\n        })\r\n        .then<TRegisterUserResponse>((response: AxiosResponse) => {\r\n            setCookie('accessToken', response.data.accessToken)\r\n            localStorage.setItem('refreshToken', response.data.refreshToken)\r\n            return response.data  \r\n        })\r\n        .catch(error => {   \r\n            console.error(error)\r\n        })\r\n        .finally(() => dispatch({\r\n            type: SHOW_LOADER, loader: false\r\n        }))\r\n    }\r\n}\r\n\r\nexport function logoutUser () {\r\n    return function(dispatch: Dispatch<LoaderAction>) {\r\n        dispatch({\r\n            type: SHOW_LOADER, loader: true\r\n        })\r\n        \r\n        return axios\r\n        .post(logoutUrl, {token: localStorage.refreshToken}, {\r\n            headers: {'Content-Type': 'application/json;charset=utf-8'}\r\n        })\r\n        .then<TLogoutUserResponse>((response: AxiosResponse) => {\r\n            deleteCookie('accessToken')\r\n            localStorage.removeItem('refreshToken')\r\n            localStorage.removeItem('resetPassword')\r\n            return response.data\r\n        })        \r\n        .catch(error => {   \r\n            console.error(error)\r\n        })\r\n        .finally(() => dispatch({\r\n            type: SHOW_LOADER, loader: false\r\n        }))\r\n    }    \r\n}\r\n\r\nexport function refreshToken (callback: Function) {\r\n    return function(dispatch: Dispatch<LoaderAction>) {\r\n        dispatch({\r\n            type: SHOW_LOADER, loader: true\r\n        })\r\n\r\n        return axios\r\n        .post(refrechTokenUrl, {token: localStorage.refreshToken}, {\r\n            headers: {'Content-Type': 'application/json;charset=utf-8'}\r\n        })\r\n        .then<TRefreshTokenResponse>((response: AxiosResponse) => {\r\n            setCookie('accessToken', response.data.accessToken)\r\n            localStorage.setItem('refreshToken', response.data.refreshToken)\r\n            dispatch(callback())\r\n            return response.data\r\n        })\r\n        .catch(error => {   \r\n            console.error(error)\r\n        })\r\n        .finally(() => dispatch({\r\n            type: SHOW_LOADER, loader: false\r\n        }))\r\n    }    \r\n}\r\n","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useState } from 'react'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { loginUser } from '../services/actions/auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport { minPasswordLength, emailRegExp } from '../utils'\r\n\r\nexport function LoginPage() {\r\n    const [email, setEmail] = useState('')\r\n    const [errorEmail, setErrorEmail] = useState(false)\r\n    const [errorEmailText, setErrorEmailText] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordType, setPasswordType] = useState<'password' | 'email' | 'text' | undefined>('password')\r\n    const [errorPassword, setPasswordError] = useState(false)\r\n    const [errorPasswordText, setPasswordText] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const location = useLocation<any>()\r\n\r\n    const changeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const changePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const login = (e: any) => {\r\n        e.preventDefault()\r\n        clearErrors()\r\n        const isValid = validate()\r\n        if (isValid) {\r\n            const data = {\r\n                email: email,\r\n                password: password,\r\n            }\r\n            dispatch(loginUser(data) as any)\r\n            .then(() => {    \r\n                const pathName = location?.state?.from?.pathname\r\n                history.replace({ pathname: pathName })\r\n            })\r\n        }\r\n    }\r\n\r\n    const clearErrors = () => {\r\n        setPasswordError(false)\r\n        setErrorEmail(false)\r\n    }\r\n\r\n    const toggleText = () => {\r\n        passwordType === 'password'\r\n            ? setPasswordType('text')\r\n            : setPasswordType('password')\r\n    }\r\n\r\n    const validate = () => {\r\n        const isPasswordValid = validatePassword()\r\n        const isEmailValid = validateEmail()\r\n        return isPasswordValid && isEmailValid\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        const isValid = Boolean(password.length && password.length >= minPasswordLength)\r\n        if (password.length && password.length < minPasswordLength) setPasswordText('Пароль должен быть не менее ' + minPasswordLength + ' символов')\r\n        if (!password.length) setPasswordText('Это поле не должно быть пустым')\r\n        isValid ? setPasswordError(false) : setPasswordError(true)\r\n        return isValid\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        const validEmail = emailRegExp.test(String(email).toLowerCase())\r\n        const isValid = Boolean(email.length && validEmail)\r\n        if (email.length && !validEmail) setErrorEmailText('Не валидный email')\r\n        if (!email.length) setErrorEmailText('Это поле не должно быть пустым')\r\n        isValid ? setErrorEmail(false) : setErrorEmail(true)\r\n        return isValid\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={login}>\r\n            <p className=\"text text_type_main-medium mb-6\">Вход</p>\r\n            <div className=\"mb-6\">\r\n            <Input \r\n                onChange={changeEmail} \r\n                value={email} \r\n                name={'email'}\r\n                error={errorEmail}\r\n                errorText={errorEmailText}\r\n                placeholder={'Email'}/>\r\n            </div>\r\n            <div className=\"mb-6\">\r\n            <Input \r\n                onChange={changePassword}\r\n                type={passwordType} \r\n                value={password} \r\n                name={'password'}\r\n                icon={passwordType === 'password' ? 'ShowIcon' : 'HideIcon'}\r\n                error={errorPassword}\r\n                errorText={errorPasswordText}\r\n                onIconClick={toggleText}\r\n                placeholder={'Пароль'}/>\r\n            </div>            \r\n            <p className=\"mb-20\">\r\n                <Button type='primary' size='medium'>Войти</Button>\r\n            </p>            \r\n            <p className=\"text text_type_main-default text_color_inactive\">Вы - новый пользователь? <Link to='/register'>Зарегистрироваться</Link></p>\r\n            <p className=\"text text_type_main-default text_color_inactive\">Забыли пароль? <Link to='/forgot-password'>Восстановить пароль</Link></p>\r\n        </form>\r\n    )\r\n}","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useState } from 'react'\r\nimport { Link, useHistory, } from 'react-router-dom'\r\nimport { registerUser } from '../services/actions/auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport { minPasswordLength, emailRegExp } from '../utils'\r\n\r\nexport function RegisterPage() {\r\n    const [email, setEmail] = useState('')\r\n    const [errorEmail, setErrorEmail] = useState(false)\r\n    const [errorEmailText, setErrorEmailText] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordType, setPasswordType] = useState<'password' | 'email' | 'text' | undefined>('password')\r\n    const [errorPassword, setPasswordError] = useState(false)\r\n    const [errorPasswordText, setPasswordText] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [errorName, setNameError] = useState(false)\r\n    const errorNameText = 'Это поле не должно быть пустым'\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const changeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const changePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const changeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const toggleText = () => {\r\n        passwordType === 'password'\r\n            ? setPasswordType('text')\r\n            : setPasswordType('password')\r\n    }\r\n\r\n    const register = (e: any) => {\r\n        e.preventDefault()\r\n        clearErrors()\r\n        const isValid = validate()\r\n        if (isValid) {\r\n            const data = {\r\n                email: email,\r\n                password: password,\r\n                name: name\r\n            }\r\n            dispatch(registerUser(data) as any)\r\n            .then(() => history.replace({ pathname: '/' }))\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        const isPasswordValid = validatePassword()\r\n        const isEmailValid = validateEmail()\r\n        const isNameValid = validateName()\r\n        return isPasswordValid && isEmailValid && isNameValid\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        const isValid = Boolean(password.length && password.length >= minPasswordLength)\r\n        if (password.length && password.length < minPasswordLength) setPasswordText('Пароль должен быть не менее ' + minPasswordLength + ' символов')\r\n        if (!password.length) setPasswordText('Это поле не должно быть пустым')\r\n        isValid ? setPasswordError(false) : setPasswordError(true)\r\n        return isValid\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        const validEmail = emailRegExp.test(String(email).toLowerCase())\r\n        const isValid = Boolean(email.length && validEmail)\r\n        if (email.length && !validEmail) setErrorEmailText('Не валидный email')\r\n        if (!email.length) setErrorEmailText('Это поле не должно быть пустым')\r\n        isValid ? setErrorEmail(false) : setErrorEmail(true)\r\n        return isValid\r\n    }\r\n\r\n    const validateName = () => {\r\n        const isValid = Boolean(name.length)\r\n        isValid ? setNameError(false) : setNameError(true)\r\n        return isValid\r\n    }\r\n\r\n    const clearErrors = () => {\r\n        setPasswordError(false)\r\n        setErrorEmail(false)\r\n        setNameError(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={register}>\r\n            <p className=\"text text_type_main-medium mb-6\">Регистрация</p>\r\n            <div className=\"mb-6\">\r\n                <Input\r\n                    type={'text'}\r\n                    placeholder={'Имя'}\r\n                    onChange={changeName}\r\n                    value={name}\r\n                    name={'name'}\r\n                    error={errorName}\r\n                    errorText={errorNameText}/>\r\n            </div>\r\n            <div className=\"mb-6\">\r\n                <Input \r\n                    onChange={changeEmail} \r\n                    value={email} \r\n                    name={'email'}\r\n                    error={errorEmail}\r\n                    errorText={errorEmailText}\r\n                    placeholder={'Укажите email'}/>\r\n            </div>\r\n            <div className=\"mb-6\">\r\n                <Input \r\n                    onChange={changePassword}\r\n                    type={passwordType} \r\n                    value={password} \r\n                    name={'password'}\r\n                    icon={passwordType === 'password' ? 'ShowIcon' : 'HideIcon'}\r\n                    error={errorPassword}\r\n                    errorText={errorPasswordText}\r\n                    onIconClick={toggleText}\r\n                    placeholder={'Введите новый пароль'}/>\r\n            </div>            \r\n            <p className=\"mb-20\">\r\n                <Button type='primary' size='medium'>Зарегистрироваться</Button>\r\n            </p>            \r\n            <p className=\"text text_type_main-default text_color_inactive\">Уже зарегистрированы? <Link to='/login'>Войти</Link></p>\r\n        </form>\r\n    )\r\n}","import { Tab } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useSelector } from 'react-redux'\r\nimport type { ReduxStore } from '../../services/store.types'\r\n\r\ntype TTabsProps = {\r\n  ingredientsTypes: string[]\r\n}\r\n\r\nexport default function Tabs ({ingredientsTypes}: TTabsProps ) { \r\n  const { activeTab } = useSelector((store: ReduxStore) => store.activeTab)\r\n\r\n  const onClick = (e: any) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', paddingBottom: '40px' }}>\r\n        {ingredientsTypes.map((ingredientsType, index) => (\r\n          <Tab value={ingredientsType} \r\n               active={activeTab === ingredientsType} \r\n               key={index}\r\n               onClick={onClick}\r\n          >{ingredientsType}\r\n          </Tab>\r\n        ))}\r\n    </div> \r\n  )\r\n}\r\n","import { useState, useEffect }  from 'react'\r\nimport { useLocation, Link } from 'react-router-dom'\r\nimport { Counter } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './ingredient.module.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDrag } from 'react-dnd'\r\nimport type { ReduxStore } from '../../services/store.types'\r\nimport type { TIngredient } from '../../types'\r\n\r\nexport default function Ingredient (props: { ingredient: TIngredient }) {\r\n  const ingredient = props.ingredient\r\n  const [count, setCount] = useState(0)\r\n  const { constructor } = useSelector((store: ReduxStore) => store.ingredients)\r\n  const location = useLocation()\r\n  const ingredientId = ingredient['_id']\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: ingredient\r\n  })\r\n\r\n  useEffect(() => {\r\n    const count = constructor.filter(item => item['_id'] === ingredient['_id']).length\r\n    setCount(count)\r\n  }, [constructor, ingredient])\r\n\r\n  return (\r\n    <Link\r\n      key={ingredientId}\r\n      to={{        \r\n        pathname: `/ingredients/${ingredientId}`,\r\n        state: { background: location },\r\n      }}\r\n      className={styles.link}\r\n    >\r\n      <figure className={styles.ingredient} ref={dragRef}>\r\n        {count > 0 && <Counter count={ingredient.type === 'bun' ? count + 1 : count} size=\"default\"/>}\r\n        <p><img src={ingredient.image} alt={ingredient.name}/></p>\r\n        <p className={ styles.price }>\r\n          <span className='text text_type_digits-default pr-2'>\r\n            {ingredient.price}\r\n          </span>\r\n          <CurrencyIcon type=\"primary\"/>\r\n        </p>            \r\n        <figcaption className='text text_type_main-default'>{ingredient.name}</figcaption>\r\n      </figure>\r\n    </Link>    \r\n  )\r\n}\r\n","import Ingredient from '../ingredient/ingredient'\r\nimport styles from './ingredients-group.module.css'\r\nimport type { TIngredient } from '../../types'\r\n\r\nexport default function IngredientsGroup (props: { ingredients: TIngredient[], anchor: string, header: string }) {\r\n  return (\r\n    <section className={ styles.group }>\r\n      <header className={'text text_type_main-medium ' + props.anchor}>\r\n          {props.header}\r\n      </header>\r\n      <section className={ styles.ingredients }>            \r\n        {props.ingredients.map(ingredient => <Ingredient key={ingredient['_id']} ingredient={ingredient}/>)}\r\n      </section>\r\n    </section>   \r\n  )\r\n}\r\n","import { Dispatch } from 'react'\r\nimport { getIngredientsUrl } from '../../url'\r\nimport {\r\n    GET_INGREDIENTS,\r\n    GET_INGREDIENTS_FAILED,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    SHOW_LOADER,\r\n    ACTIVE_TAB\r\n} from './actionTypes'\r\nimport { Actions, TIngredientsResponse } from './burgrer-ingredients.types'\r\n\r\nexport function getIngredients () {\r\n    return function(dispatch: Dispatch<Actions>) {\r\n        dispatch({type: GET_INGREDIENTS})\r\n        dispatch({type: SHOW_LOADER, loader: true})\r\n        \r\n        fetch(getIngredientsUrl)\r\n        .then<TIngredientsResponse>((res: Response)  => {\r\n            if (res.ok) return res.json()\r\n            return Promise.reject(res.status)\r\n        })\r\n        .then(ingredients => {\r\n            dispatch({\r\n                type: GET_INGREDIENTS_SUCCESS,\r\n                ingredients: ingredients.data\r\n            })\r\n        })\r\n        .catch(() => {            \r\n            dispatch({\r\n                type: GET_INGREDIENTS_FAILED\r\n            })\r\n        })\r\n        .finally(() => dispatch({\r\n            type: SHOW_LOADER, loader: false\r\n        }))\r\n    }\r\n}\r\n\r\nexport function setActiveTab (activeTab: string) {\r\n    return {\r\n        type: ACTIVE_TAB,\r\n        activeTab\r\n    }\r\n}\r\n","import { useEffect } from 'react'\r\nimport Tabs from '../tabs/tabs'\r\nimport IngredientsGroup from '../ingredients-group/ingredients-group'\r\nimport styles from './burger-ingredients.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setActiveTab } from '../../services/actions/burger-ingredients'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport type { ReduxStore } from '../../services/store.types'\r\n\r\nexport default function BurgerIngredients () {\r\n  const { ingredients } = useSelector((store: ReduxStore) => store.ingredients)\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const [bun, inViewBun] = useInView({threshold: 0.3})\r\n  const [sauce, inViewSauce] = useInView({threshold: 0.3})\r\n  const [main, inViewMain] = useInView({threshold: 0})\r\n\r\n  useEffect(() => {\r\n    if (inViewBun) dispatch(setActiveTab('Булки'))\r\n    else if (inViewSauce) dispatch(setActiveTab('Соусы'))\r\n    else if (inViewMain) dispatch(setActiveTab('Начинки'))\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Tabs ingredientsTypes={['Булки', 'Соусы', 'Начинки']}/>\r\n      <div className={ styles.ingredients }>\r\n        <div ref={bun}>\r\n          <IngredientsGroup ingredients={ingredients.filter(ingredient => ingredient.type === 'bun')}\r\n                            anchor={'bun'}\r\n                            header={'Булки'}/>\r\n        </div>                 \r\n        <div ref={sauce}>\r\n          <IngredientsGroup ingredients={ingredients.filter(ingredient => ingredient.type === 'sauce')}\r\n                            anchor={'sauce'}\r\n                            header={'Соусы'}/>\r\n        </div>\r\n        <div ref={main}>\r\n          <IngredientsGroup ingredients={ingredients.filter(ingredient => ingredient.type === 'main')}\r\n                            anchor={'main'}\r\n                            header={'Начинки'}/>\r\n        </div>\r\n      </div>       \r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/done.dc2f52b0.png\";","import styles from './order-details.module.css'\r\nimport done from '../../images/done.png'\r\nimport { useSelector } from 'react-redux'\r\nimport type { ReduxStore } from '../../services/store.types'\r\n\r\nexport default function OrderDetails () {\r\n  const { number, numberRequest, numberFailed } = useSelector((store: ReduxStore) => store.orderNumber)\r\n\r\n  if (numberFailed) return <p className=\"text text_type_main-default text_color_inactive\">Произошла ошибка при получении данных</p>\r\n  else if (numberRequest) return <p className=\"text text_type_main-default text_color_inactive\">Создание заказа...</p>\r\n  else {\r\n    return (\r\n      <div className={styles.details}>\r\n        <p className=\"text text_type_digits-large mb-5\">{number}</p>\r\n        <p className=\"text text_type_main-medium mb-15\">идентификатор заказа</p>\r\n        <p className=\"mb-15\"><img src={done} alt='done'/></p>\r\n        <p className=\"text text_type_main-default mb-3\">Ваш заказ начали готовить</p>\r\n        <p className=\"text text_type_main-default text_color_inactive\">Дождитесь готовности на орбитальной станции</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styles from './modal-overlay.module.css'\r\nimport { FunctionComponent } from 'react'\r\n\r\ninterface IModalOverlayProps {\r\n    onClose: (e: any) => void\r\n}\r\n\r\nexport const ModalOverlay: FunctionComponent<IModalOverlayProps> = (props) => {\r\n    const onClose = props.onClose\r\n    const handleClose = (e: any) => { \r\n        if (e.keyCode === 27) onClose(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleClose)\r\n        return () => window.removeEventListener('keydown', handleClose)\r\n\t})\r\n\r\n    return (<div className={styles.overlay} onClick={onClose}></div>)\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './modal.module.css'\r\nimport { ModalOverlay } from '../modal-overlay/modal-overlay'\r\nimport { FunctionComponent } from 'react'\r\n\r\nconst modalRoot = document.getElementById('modals') as HTMLElement\r\n\r\ninterface IModalProps {\r\n  onClose: (e: any) => void\r\n}\r\n\r\nexport const Modal: FunctionComponent<IModalProps> = (props) => {\r\n    const { children, onClose } = props\r\n\r\n    return ReactDOM.createPortal (\r\n        (\r\n          <>\r\n            <div className={styles.modal}>\r\n              <div className={styles.close} onClick={onClose}><CloseIcon type=\"primary\"/></div>\r\n                {children}\r\n            </div>\r\n            <ModalOverlay onClose={onClose} />\r\n          </>\r\n        ), \r\n        modalRoot\r\n    )\r\n}\r\n","import { getOrderNumberUrl } from '../../url'\r\nimport { getCookie } from '../../utils'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport type { AppDispatch, AppThunk } from '../store.types'\r\nimport { refreshToken } from './auth'\r\nimport {\r\n    GET_ODDER_NUMBER,\r\n    GET_ODDER_NUMBER_FAILED,\r\n    GET_ODDER_NUMBER_SUCCESS,\r\n    CLEAR_CONSTRUCTOR\r\n} from './actionTypes'\r\nimport { TGetOrderNumberResponse } from './order-details.type'\r\n\r\nexport function getOrderNumber (ingredientsIds: string[]) {\r\n    return function(dispatch: AppDispatch | AppThunk) {\r\n        dispatch({\r\n            type: GET_ODDER_NUMBER\r\n        })\r\n\r\n        return axios\r\n        .post(getOrderNumberUrl, {ingredients: ingredientsIds}, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'authorization': getCookie('accessToken')\r\n            }\r\n        })\r\n        .then<TGetOrderNumberResponse>((response: AxiosResponse) => {\r\n            dispatch({\r\n                type: GET_ODDER_NUMBER_SUCCESS,\r\n                number: response.data.order.number\r\n            })\r\n            dispatch({\r\n                type: CLEAR_CONSTRUCTOR\r\n            })\r\n            return response.data\r\n        })\r\n        .catch(error => {                   \r\n            dispatch({type: GET_ODDER_NUMBER_FAILED})\r\n            if (error.response.status === 403)\r\n                dispatch(refreshToken(getOrderNumber))\r\n        })\r\n    }\r\n}","import {useEffect, useState} from 'react'\r\nimport OrderDetails from '../order-details/order-details'\r\nimport { Modal } from '../modal/modal'\r\nimport { Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './total-price.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getCookie } from '../../utils'\r\nimport { getOrderNumber } from '../../services/actions/order-details'\r\nimport type { ReduxStore } from '../../services/store.types'\r\n\r\nexport default function TotalPrice () {\r\n  const [visible, setVisible] = useState(false)\r\n  const { constructor } = useSelector((store: ReduxStore) => store.ingredients)\r\n  const [price, setPrice] = useState(0)\r\n  const history = useHistory()\r\n  const isAuth = getCookie('accessToken')\r\n  const dispatch = useDispatch()\r\n\r\n  const onClose = () => setVisible(false)\r\n\r\n  const onOpen = () => {\r\n    if (isAuth) {\r\n      setVisible(true)\r\n       createOrder()\r\n    } else {\r\n      history.replace({ pathname: '/login' })\r\n    }    \r\n  }\r\n\r\n  const showButton = () => {\r\n    return Boolean(constructor.length && constructor.filter(item => item.type === 'bun').length)\r\n  }\r\n\r\n  const createOrder = () => {\r\n    const ingredientsIds = constructor.map(ingredient => ingredient['_id'])\r\n    dispatch(getOrderNumber(ingredientsIds))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const totalPrice = constructor.reduce((sum, current) => current.type === 'bun' ? sum + current.price * 2 : sum + current.price, 0)\r\n    setPrice(totalPrice)\r\n  }, [constructor])\r\n\r\n  return (\r\n    <>\r\n      <div className={ styles.totalPrice }>\r\n        <span className='text text_type_digits-default pr-2'>{price}</span>\r\n        <CurrencyIcon type=\"primary\"/>\r\n        <p className='ml-10'>\r\n          {showButton() && <Button onClick={onOpen} type='primary' size='medium'>Оформить заказ</Button>}\r\n        </p>\r\n      </div>\r\n      { visible && <Modal onClose={onClose}><OrderDetails/></Modal> }\r\n    </>   \r\n  )\r\n}\r\n","import { useRef } from 'react'\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './not-bun-ingredients-constructor.module.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useDrop, useDrag } from 'react-dnd'\r\nimport { DEL_FROM_CONSTRUCTOR } from '../../services/actions/actionTypes'\r\n\r\ntype TNotBunIngredientsConstructorProps = {\r\n    moveElement: (dragIndex: number, hoverIndex: number) => void\r\n    thumbnail: string\r\n    text: string\r\n    id: string\r\n    index: number\r\n    price: number\r\n    uniqueKey: number\r\n}\r\n\r\nexport default function NotBunIngredientsConstructor ({thumbnail, text, id, index, moveElement, price, uniqueKey}: TNotBunIngredientsConstructorProps) {\r\n    const ref = useRef<HTMLDivElement>(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'other',\r\n        \r\n        hover(item: { index: number}, monitor) {         \r\n            if (!ref.current) return\r\n\r\n            const dragIndex = item.index\r\n            const hoverIndex = index\r\n\r\n            if (dragIndex === hoverIndex) return\r\n\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n            const clientOffset = monitor.getClientOffset()\r\n            \r\n            if(!clientOffset) return\r\n            \r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) return\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) return\r\n            \r\n            moveElement(dragIndex, hoverIndex)\r\n            item.index = hoverIndex\r\n        }\r\n    })\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'other',\r\n        item: () => {\r\n            return { id, index }\r\n        },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    })    \r\n   \r\n    const delIngredient = (uniqueKey: number) => {\r\n        dispatch({\r\n            type: DEL_FROM_CONSTRUCTOR,\r\n            uniqueKey: uniqueKey\r\n        })\r\n    }\r\n\r\n    const opacity = isDragging ? 0 : 1\r\n\r\n    drag(drop(ref))\r\n\r\n    return (\r\n        <div className={styles.other} style={{opacity: opacity}} ref={ref}>\r\n            <DragIcon type=\"primary\"/>\r\n            <div className={styles.otherItem}>\r\n                <ConstructorElement\r\n                    isLocked={false}\r\n                    handleClose={() => delIngredient(uniqueKey)}\r\n                    text={text} \r\n                    thumbnail={thumbnail}\r\n                    price={price}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport TotalPrice from '../total-price/total-price'\r\nimport NotBunIngredientsConstructor from '../not-bun-ingredients-constructor/not-bun-ingredients-constructor'\r\nimport styles from './burger-constructor.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useDrop } from 'react-dnd'\r\nimport { ADD_TO_CONSTRUCTOR, REORDER_INGREDIENTS, SET_UNIQUE_KEY } from '../../services/actions/actionTypes'\r\nimport type { ReduxStore } from '../../services/store.types'\r\nimport { TIngredient } from '../../types'\r\n\r\nexport default function BurgerConstructor () {\r\n  const [bun, setBun] = useState<TIngredient>()\r\n  const [otherIngredients, setOtherIngredients] = useState<TIngredient[]>([])\r\n  const { constructor } = useSelector((store: ReduxStore) => store.ingredients)\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    setBun(constructor.filter(ingredient => ingredient.type === 'bun')[0])\r\n    setOtherIngredients(constructor.filter(ingredient => ingredient.type !== 'bun')) \r\n  }, [constructor]) \r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: 'ingredient',\r\n    drop(item) {\r\n      dispatch({\r\n        type: ADD_TO_CONSTRUCTOR,\r\n        el: item\r\n      })\r\n      dispatch({\r\n        type:  SET_UNIQUE_KEY, item})\r\n    }\r\n  })\r\n\r\n  const isBun = constructor.filter(ingredient => ingredient.type === 'bun').length\r\n\r\n  const moveElement = useCallback((dragIndex, hoverIndex) => {    \r\n    const newElements = [...otherIngredients]\r\n    if (isBun && bun) newElements.push(bun)\r\n    newElements.splice(hoverIndex, 0, newElements.splice(dragIndex, 1)[0])\r\n    dispatch({ type: REORDER_INGREDIENTS, newElements: newElements })\r\n    }, [otherIngredients, bun, isBun, dispatch]\r\n  )\r\n\r\n  const renderElement = (ingredient: TIngredient, index: number) => {\r\n    const uniqueKey = ingredient.uniqueKey ? ingredient.uniqueKey : 0.1\r\n    return (\r\n      <NotBunIngredientsConstructor\r\n        key={uniqueKey}\r\n        uniqueKey={uniqueKey}\r\n        id={ingredient['_id']}\r\n        index={index}\r\n        moveElement={moveElement}\r\n        text={ingredient.name}\r\n        thumbnail={ingredient['image_mobile']}\r\n        price={ingredient.price}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={styles.burgerConstructor} ref={dropRef}>\r\n      <div className={styles.bun}>\r\n          {\r\n            bun &&\r\n              <ConstructorElement\r\n                type={'top'}\r\n                isLocked={true} \r\n                text={bun.name + ' (верх)'} \r\n                thumbnail={bun['image_mobile']} \r\n                price={bun.price}/>\r\n          }\r\n        </div>\r\n        \r\n        <div className={styles.otherIngredients}>\r\n          {otherIngredients.map((ingredient, i) => renderElement(ingredient, i))}   \r\n        </div>\r\n\r\n        <div className={styles.bun}>\r\n          {\r\n            bun &&\r\n              <ConstructorElement\r\n                type={'bottom'}\r\n                isLocked={true} \r\n                text={bun.name + ' (низ)'} \r\n                thumbnail={bun['image_mobile']} \r\n                price={bun.price}/> \r\n          }         \r\n        </div>\r\n      <TotalPrice/>\r\n    </div>\r\n  )\r\n}\r\n","import BurgerIngredients from '../components/burger-ingredients/burger-ingredients'\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport styles from './home.module.css'\r\nimport { useSelector } from 'react-redux'\r\nimport type { ReduxStore } from '../services/store.types'\r\n\r\nexport function HomePage() {\r\n  const { ingredientsRequest, ingredientsFailed } = useSelector((store: ReduxStore) => store.ingredients)\r\n\r\n  if (ingredientsFailed) return <p className=\"text text_type_main-default text_color_inactive\">Произошла ошибка при получении данных</p>\r\n  else if (ingredientsRequest) return <p className=\"text text_type_main-default text_color_inactive\">Загрузка данных...</p>\r\n  else {\r\n    return (\r\n      <>\r\n        <header className={ styles.header }>\r\n          <h1 className='text text_type_main-large pt-8 pb-6'>Соберите бургер</h1>\r\n        </header>\r\n        <section className={ styles.content }>\r\n          <DndProvider backend={ HTML5Backend }>\r\n              <BurgerIngredients/>\r\n              <BurgerConstructor/>\r\n          </DndProvider>\r\n        </section>\r\n      </>    \r\n    )\r\n  } \r\n}","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { resetPassword } from '../services/actions/forgot-password'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { emailRegExp } from '../utils'\r\n\r\nexport function ForgotPasswordPage() {\r\n    const [email, setEmail] = useState('')\r\n    const [errorEmail, setErrorEmail] = useState(false)\r\n    const [errorEmailText, setErrorEmailText] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const changeEmail = e => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        setErrorEmail(false)\r\n        const isValid = validateEmail()\r\n        if (isValid) {\r\n            dispatch(resetPassword(email))\r\n            .then(() => history.replace({ pathname: '/reset-password' }))\r\n        }\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        const validEmail = emailRegExp.test(String(email).toLowerCase())\r\n        const isValid = Boolean(email.length && validEmail)\r\n        if (email.length && !validEmail) setErrorEmailText('Не валидный email')\r\n        if (!email.length) setErrorEmailText('Это поле не должно быть пустым')\r\n        isValid ? setErrorEmail(false) : setErrorEmail(true)\r\n        return isValid\r\n    }    \r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={submit}>\r\n            <p className=\"text text_type_main-medium mb-6\">Восстановление пароля</p>\r\n            <div className=\"mb-6\">\r\n                <Input \r\n                    onChange={changeEmail} \r\n                    value={email} \r\n                    name={'email'}\r\n                    error={errorEmail}\r\n                    errorText={errorEmailText}\r\n                    placeholder={'Укажите email'}/>\r\n            </div>           \r\n            <p className=\"mb-20\">\r\n                <Button type='primary' size='medium'>Восстановить</Button>\r\n            </p>            \r\n            <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль? <Link to='/login'>Войти</Link></p>\r\n        </form>\r\n    )\r\n}","import { getCookie } from '../../utils'\r\nimport { forgotPasswordUrl } from '../../url'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport { LoaderAction } from './loader.types'\r\nimport { Dispatch } from 'react'\r\n\r\nimport {\r\n    SHOW_LOADER\r\n} from './actionTypes'\r\n\r\nexport type TForgotPasswordResponse = {\r\n    success: boolean\r\n    message: string\r\n} & Response\r\n\r\nexport function resetPassword (email: string) {\r\n    return function(dispatch: Dispatch<LoaderAction>) {\r\n        dispatch({\r\n            type: SHOW_LOADER, loader: true\r\n        })\r\n        \r\n        return axios\r\n        .post(forgotPasswordUrl, {email: email}, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'authorization': getCookie('accessToken')\r\n            }\r\n        })\r\n        .then<TForgotPasswordResponse>((response: AxiosResponse) => {\r\n            localStorage.setItem('resetPassword', 'true')\r\n            return response.data\r\n        })\r\n        .catch(error => {   \r\n            console.error(error)\r\n        })\r\n        .finally(() => dispatch({\r\n            type: SHOW_LOADER, loader: false\r\n        }))\r\n    }\r\n}","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { resetPassword } from '../services/actions/reset-password'\r\nimport { useDispatch } from 'react-redux'\r\nimport { minPasswordLength } from '../utils'\r\n\r\nexport function ResetPasswordPage() {\r\n    const [password, setPassword] = useState('')\r\n    const [passwordType, setPasswordType] = useState<'password' | 'email' | 'text' | undefined>('password')\r\n    const [errorPassword, setPasswordError] = useState(false)\r\n    const [errorPasswordText, setPasswordText] = useState('')\r\n    const [token, setToken] = useState('')\r\n    const [errorToken, setTokenError] = useState(false)\r\n    const errorTokenText = 'Это поле не должно быть пустым'\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const changeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setToken(e.target.value)\r\n    }\r\n\r\n    const changePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const toggleText = () => {\r\n        passwordType === 'password'\r\n            ? setPasswordType('text')\r\n            : setPasswordType('password')\r\n    }    \r\n\r\n    const submit = (e: any) => {\r\n        e.preventDefault()\r\n        clearErrors()\r\n        const isValid = validate()\r\n        if (isValid) {\r\n            const data = {\r\n                password: password,\r\n                token: token\r\n            }\r\n            dispatch(resetPassword(data) as any)\r\n            .then(() => history.replace({ pathname: '/login' }))\r\n        }        \r\n    }\r\n\r\n    const clearErrors = () => {\r\n        setPasswordError(false)\r\n        setTokenError(false)\r\n    }\r\n\r\n    const validate = () => {\r\n        const isPasswordValid = validatePassword()\r\n        const isTokenValid = validateToken()\r\n        return isPasswordValid && isTokenValid\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        const isValid = Boolean(password.length && password.length >= minPasswordLength)\r\n        if (password.length && password.length < minPasswordLength) setPasswordText('Пароль должен быть не менее шести символов')\r\n        if (!password.length) setPasswordText('Это поле не должно быть пустым')\r\n        isValid ? setPasswordError(false) : setPasswordError(true)\r\n        return isValid\r\n    }\r\n\r\n    const validateToken = () => {\r\n        const isValid = Boolean(token.length)\r\n        isValid ? setTokenError(false) : setTokenError(true)\r\n        return isValid\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={submit}>\r\n            <p className=\"text text_type_main-medium mb-6\">Восстановление пароля</p>\r\n            <div className=\"mb-6\">\r\n                <Input \r\n                    onChange={changePassword}\r\n                    type={passwordType} \r\n                    value={password} \r\n                    name={'password'}\r\n                    icon={passwordType === 'password' ? 'ShowIcon' : 'HideIcon'}\r\n                    error={errorPassword}\r\n                    errorText={errorPasswordText}\r\n                    onIconClick={toggleText}\r\n                    placeholder={'Введите новый пароль'}/>  \r\n            </div> \r\n            <div className=\"mb-6\">\r\n                <Input\r\n                    onChange={changeCode} \r\n                    type=\"text\" \r\n                    value={token} \r\n                    name={'token'}\r\n                    error={errorToken}\r\n                    errorText={errorTokenText}\r\n                    placeholder={'Ведите код из письма'}/>  \r\n            </div>           \r\n            <p className=\"mb-20\">\r\n                <Button type='primary' size='medium'>Сохранить</Button>\r\n            </p>            \r\n            <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль? <Link to='/login'>Войти</Link></p>\r\n        </form>\r\n    )\r\n}","import { getCookie } from '../../utils'\r\nimport { resetPasswordUrl } from '../../url'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport { LoaderAction } from './loader.types'\r\nimport { Dispatch } from 'react'\r\n\r\nimport {\r\n    SHOW_LOADER\r\n} from './actionTypes'\r\n\r\nexport type TResetPasswordResponse = {\r\n    success: boolean\r\n    message: string\r\n} & Response\r\n\r\nexport function resetPassword (data: { password: string; token: string }) {\r\n    return function(dispatch: Dispatch<LoaderAction>) {\r\n        dispatch({\r\n            type: SHOW_LOADER, loader: true\r\n        })\r\n        \r\n        return axios\r\n        .post(resetPasswordUrl, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'authorization': getCookie('accessToken')\r\n            }\r\n        })\r\n        .then<TResetPasswordResponse>((response: AxiosResponse) => {\r\n            return response.data\r\n        })\r\n        .catch(error => {   \r\n            console.error(error)\r\n        })\r\n        .finally(() => dispatch({\r\n            type: SHOW_LOADER, loader: false\r\n        }))\r\n    }\r\n}","import { getCookie } from '../../utils'\r\nimport { profileUrl } from '../../url'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport { TProfileResponse } from './profile.types'\r\nimport { refreshToken } from './auth'\r\nimport type { AppDispatch, AppThunk } from '../store.types'\r\n\r\nimport {\r\n    GET_USER,\r\n    GET_USER_FAILED,\r\n    GET_USER_SUCCESS\r\n} from './actionTypes'\r\n\r\nexport function getUser () {\r\n    return function(dispatch: AppDispatch | AppThunk) {\r\n        dispatch({\r\n            type: GET_USER\r\n        })\r\n        \r\n        return axios\r\n        .get(profileUrl, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'authorization': getCookie('accessToken')\r\n            }\r\n        })\r\n        .then<TProfileResponse>((response: AxiosResponse) => {\r\n            dispatch({\r\n                type: GET_USER_SUCCESS,\r\n                user: response.data.user\r\n            })\r\n            return response.data.user\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: GET_USER_FAILED})\r\n            if (error.response.status === 403)\r\n                dispatch(refreshToken(updateUser))\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateUser (data: { email: string; name: string; password: string }) {\r\n    return function(dispatch: AppDispatch | AppThunk) {\r\n        dispatch({\r\n            type: GET_USER\r\n        })\r\n\r\n        return axios\r\n        .patch(profileUrl, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'authorization': getCookie('accessToken')\r\n            }\r\n        })\r\n        .then<TProfileResponse>((response: AxiosResponse) => {\r\n            dispatch({\r\n                type: GET_USER_SUCCESS,\r\n                user: response.data.user\r\n            })\r\n            return response.data.user\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: GET_USER_FAILED})\r\n            if (error.response.status === 403)\r\n                dispatch(refreshToken(updateUser))\r\n        })\r\n    }\r\n}\r\n","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux'\r\n\r\nimport { AppDispatch, AppThunk, ReduxStore } from './store.types'\r\n\r\nexport const useSelector: TypedUseSelectorHook<ReduxStore> = selectorHook\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>()","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useState, useEffect } from 'react'\r\nimport styles from './profile.module.css'\r\nimport { getUser, updateUser } from '../../services/actions/profile'\r\nimport { useDispatch, useSelector } from '../../services/hooks'\r\nimport { minPasswordLength, emailRegExp } from '../../utils'\r\nimport type { ReduxStore } from '../../services/store.types'\r\nimport type { TUser } from '../../types'\r\n\r\nexport function Profile() {\r\n    const { user } = useSelector((store: ReduxStore) => store.user)\r\n    const [defEmail, setDefEmail] = useState('')\r\n    const [defName, setDefName] = useState('')\r\n    const defPassword = ''\r\n    const [email, setEmail] = useState('')\r\n    const [errorEmail, setErrorEmail] = useState(false)\r\n    const [errorEmailText, setErrorEmailText] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [errorPassword, setPasswordError] = useState(false)\r\n    const [errorPasswordText, setPasswordText] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [errorName, setNameError] = useState(false)\r\n    const errorNameText = 'Это поле не должно быть пустым'\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n      dispatch(getUser())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setUserData(user)\r\n        }\r\n      }, [user])\r\n\r\n    const setUserData = (user: TUser) => {       \r\n        setDefEmail(user.email)\r\n        setDefName(user.name)\r\n        setEmail(user.email)\r\n        setName(user.name)\r\n        setPassword(defPassword)\r\n    }\r\n\r\n    const changeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const changePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const changeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const save = (e: any) => {\r\n        e.preventDefault()\r\n        clearErrors()\r\n        const isValid = validate()\r\n        if (isValid) {\r\n            const data = {\r\n                email: email,\r\n                name: name,\r\n                password: password\r\n            }\r\n            dispatch(updateUser(data))\r\n        }       \r\n    }\r\n\r\n    const validate = () => {\r\n        const isPasswordValid = validatePassword()\r\n        const isEmailValid = validateEmail()\r\n        const isNameValid = validateName()\r\n        return isPasswordValid && isEmailValid && isNameValid\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        const isValid = Boolean(password.length && password.length >= minPasswordLength)\r\n        if (password.length && password.length < minPasswordLength) setPasswordText('Пароль должен быть не менее ' + minPasswordLength + ' символов')\r\n        if (!password.length) setPasswordText('Это поле не должно быть пустым')\r\n        isValid ? setPasswordError(false) : setPasswordError(true)\r\n        return isValid\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        const validEmail = emailRegExp.test(String(email).toLowerCase())\r\n        const isValid = Boolean(email.length && validEmail)\r\n        if (email.length && !validEmail) setErrorEmailText('Не валидный email')\r\n        if (!email.length) setErrorEmailText('Это поле не должно быть пустым')\r\n        isValid ? setErrorEmail(false) : setErrorEmail(true)\r\n        return isValid\r\n    }\r\n\r\n    const validateName = () => {\r\n        const isValid = Boolean(name.length)\r\n        isValid ? setNameError(false) : setNameError(true)\r\n        return isValid\r\n    }\r\n\r\n    const clearErrors = () => {\r\n        setPasswordError(false)\r\n        setErrorEmail(false)\r\n        setNameError(false)\r\n    }\r\n\r\n    const cancel = (e: any) => {\r\n        e.preventDefault()\r\n        clearErrors()\r\n        setPassword(defPassword)\r\n        setEmail(defEmail)\r\n        setName(defName)\r\n    }\r\n\r\n    const resetPassword = () => {\r\n        if (password !== defPassword)\r\n            setPassword(defPassword)\r\n    }\r\n\r\n    const resetEmail = () => {\r\n        if (email !== defEmail)\r\n            setEmail(defEmail)\r\n    }\r\n\r\n    const resetName = () => {\r\n        if (name !== defName)\r\n            setName(defName)\r\n    }\r\n\r\n    const isDef = () => {\r\n        return password === defPassword && email === defEmail && name === defName\r\n    }\r\n\r\n    return (\r\n        user &&\r\n            <section>\r\n                <form className={styles.profileForm + ' form'} onSubmit={save}>\r\n                    <div className=\"mb-6\">\r\n                        <Input\r\n                            type={'text'}\r\n                            placeholder={'Имя'}\r\n                            onChange={changeName}\r\n                            value={name}\r\n                            name={'name'}\r\n                            icon={name !== defName ? 'CloseIcon' : 'EditIcon'}\r\n                            error={errorName}\r\n                            onIconClick={resetName}\r\n                            errorText={errorNameText}/>\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <Input \r\n                            onChange={changeEmail} \r\n                            value={email} \r\n                            name={'email'}\r\n                            icon={email !== defEmail ? 'CloseIcon' : 'EditIcon'}\r\n                            error={errorEmail}\r\n                            errorText={errorEmailText}\r\n                            onIconClick={resetEmail}\r\n                            placeholder={'Логин'}/>\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <Input \r\n                            onChange={changePassword}\r\n                            type={'password'} \r\n                            value={password} \r\n                            name={'password'}\r\n                            icon={password !== defPassword ? 'CloseIcon' : 'EditIcon'}\r\n                            error={errorPassword}\r\n                            errorText={errorPasswordText}\r\n                            onIconClick={resetPassword}\r\n                            placeholder={'Пароль'}/>\r\n                    </div>\r\n                    {\r\n                        !isDef() && \r\n                        <p className=\"mb-20\">\r\n                        <a href=\"/#\" className=\"text text_type_main-default mr-7\" onClick={cancel}>Отмена</a>\r\n                        <Button type='primary' size='medium'>Сохранить</Button>\r\n                    </p> \r\n                    }        \r\n                </form>\r\n            </section>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styles from './feed-item.module.css'\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { formatDate } from '../../utils'\r\nimport { useLocation, Link } from 'react-router-dom'\r\nimport type { ReduxStore } from '../../services/store.types'\r\nimport type { TIngredient, TOrder } from '../../types'\r\n\r\nexport function FeedItem(props: { order: TOrder; showStatus: boolean }) {\r\n    const {order, showStatus} = props\r\n    const { ingredients } = useSelector((store: ReduxStore) => store.ingredients)\r\n    const [orderIngredients, setOrderIngredients] = useState<TIngredient[]>([])\r\n    const [images, setImages] = useState<string[]>([])\r\n    const [count, setCount] = useState(0)\r\n    const [price, setPrice] = useState(0)\r\n    const showCount = 5\r\n    const location = useLocation()\r\n    const orderId = order.number\r\n\r\n    useEffect(() => {\r\n        if (ingredients.length) {\r\n            let totalPrice = 0\r\n            let bun = 0\r\n            let targetIngredients: TIngredient[] = []\r\n            order?.ingredients?.forEach((ingredient) => {\r\n                let targetIngredient: TIngredient = ingredients.filter(item => item['_id'] === ingredient)[0]               \r\n                if (targetIngredient?.price) {\r\n                    targetIngredients.push(targetIngredient)\r\n                    if (targetIngredient.type === 'bun' && !bun) {\r\n                        totalPrice += 2 * targetIngredient.price\r\n                        bun = 1\r\n                    }\r\n                    if ((targetIngredient.type !== 'bun'))\r\n                    totalPrice += targetIngredient.price\r\n                }\r\n            })\r\n            setPrice(totalPrice)\r\n            setOrderIngredients(targetIngredients)        \r\n        }        \r\n    }, [ingredients, order.ingredients])\r\n\r\n    useEffect(() => {\r\n        let bun = 0\r\n        let targetImages: string[] = []\r\n        orderIngredients.forEach(ingredient => {\r\n            if (ingredient.type === 'bun' && !bun) {\r\n                bun = 1\r\n                targetImages.push(ingredient['image_mobile'])\r\n            } \r\n            if (ingredient.type !== 'bun') {\r\n                targetImages.push(ingredient['image_mobile']) \r\n            }\r\n        })  \r\n        setImages(targetImages)\r\n        setCount(targetImages.length)\r\n    }, [orderIngredients])\r\n\r\n    const getStatus = (status: string) => {\r\n        if (status === 'done') return 'Выполнен'\r\n        if (status === 'created') return 'Создан'\r\n        if (status === 'pending') return 'Готовится'\r\n        return false\r\n    }\r\n\r\n    const getStatusColor = (status: string) => status === 'done' ? '#00CCCC' : '#FFFFFF'\r\n\r\n    return (\r\n        <Link\r\n            key={orderId}\r\n            to={{        \r\n                pathname: `${location.pathname}/${orderId}`,\r\n                state: { background: location },\r\n            }}\r\n            className={styles.link}\r\n        >\r\n            <section className={styles.order}>\r\n                <header className={styles.header}>\r\n                    <p className=\"text text_type_digits-default\">{'#' + order.number}</p>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">{formatDate(order.createdAt)}</p>\r\n                </header>\r\n                <p className={styles.name + ' text text_type_main-medium pb-6 pt-6'}>\r\n                    {order.name}<br/>\r\n                    {showStatus && <span className=\"text text_type_main-default\" style={{color: getStatusColor(order.status)}}>{getStatus(order.status)}</span>}\r\n                </p>\r\n                <footer className={styles.footer}>\r\n                    <div className={styles.images}>\r\n                        {\r\n                            images.map((image, i) => {\r\n                                let left = -i * 15\r\n                                if (i <= showCount - 1)\r\n                                    return  <div key={i} className={styles.imageWrapper} style={{left: left, zIndex: 100 - i}}>\r\n                                                <img className={styles.image} src={image} alt=\"\" />\r\n                                            </div>\r\n                                if (i === showCount)\r\n                                    return  <div key={i} className={styles.imageWrapper} style={{left: left, zIndex: 100 - i}}>\r\n                                                <p className={styles.count + ' text text_type_digits-default'}>{'+' + (count - showCount + 1)}</p>\r\n                                                <img className={styles.image} style={{opacity: 0.5}} src={image} alt=\"\" />\r\n                                            </div>\r\n                                return false\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles.coast}>\r\n                        <span className='text text_type_digits-default pr-2'>{price}</span>\r\n                        <CurrencyIcon type=\"primary\"/>\r\n                    </div>\r\n                </footer>\r\n            </section>\r\n        </Link>        \r\n    )\r\n}\r\n","import { TMassage } from '../../types'\r\n\r\nexport const WS_CONNECTION_START = 'WS_CONNECTION_START'\r\nexport const WS_CONNECTION_SUCCESS = 'WS_CONNECTION_SUCCESS'\r\nexport const WS_CONNECTION_ERROR = 'WS_CONNECTION_ERROR'\r\nexport const WS_CONNECTION_CLOSED = 'WS_CONNECTION_CLOSED'\r\nexport const WS_GET_MESSAGE = 'WS_GET_MESSAGE'\r\nexport const WS_SEND_MESSAGE = 'WS_SEND_MESSAGE'\r\n\r\nexport type StartAction = {\r\n    type: typeof WS_CONNECTION_START \r\n}\r\n\r\nexport type SuccessAction = {\r\n    type: typeof WS_CONNECTION_SUCCESS \r\n}\r\n\r\nexport type ErrorAction = {\r\n    type: typeof WS_CONNECTION_ERROR\r\n    payload: WebSocketEventMap\r\n}\r\n\r\nexport type ClosedAction = {\r\n    type: typeof WS_CONNECTION_CLOSED \r\n}\r\n\r\nexport type GetAction = {\r\n    type: typeof WS_GET_MESSAGE\r\n    payload: TMassage[]\r\n}\r\n\r\nexport type SendAction = {\r\n    type: typeof WS_SEND_MESSAGE \r\n}\r\n\r\nexport type Actions = \r\n    | StartAction \r\n    | SuccessAction\r\n    | ErrorAction\r\n    | ClosedAction\r\n    | GetAction\r\n    | SendAction\r\n","import { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { FeedItem } from '../feed-item/feed-item'\r\nimport { feedsUserUrl } from '../../url'\r\nimport styles from './orders.module.css'\r\nimport { getCookie } from '../../utils'\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from '../../services/actions/wsActionTypes'\r\nimport type { ReduxStore } from '../../services/store.types'\r\nimport type { TOrder } from '../../types'\r\n\r\nexport function Orders() {\r\n    const dispatch = useDispatch()\r\n    const { messages } = useSelector((store: ReduxStore) => store.messages)\r\n    const [orders, setOrders] = useState<TOrder[]>([])\r\n    let accessToken = getCookie('accessToken'), token = ''\r\n    if (accessToken) token = accessToken.split(' ')[1]\r\n        \r\n    useEffect(() => {\r\n        dispatch({type: WS_CONNECTION_START, payload: feedsUserUrl + token})\r\n        return () => {\r\n            dispatch({type: WS_CONNECTION_CLOSED})\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    useEffect(() => {\r\n        if (messages[0]?.orders) {\r\n            setOrders(messages[0].orders)\r\n        }\r\n    }, [messages])\r\n\r\n    return (\r\n        <div className={ styles.userFeed }>\r\n            { \r\n                Boolean(orders.length)\r\n                ? orders.map(item => item?.ingredients?.length ? <FeedItem key={item['_id']} order={item} showStatus={true}/> : false)\r\n                : <p className=\"text text_type_main-default text_color_inactive pt-4\">У Вас еще не было заказов</p>\r\n            }\r\n        </div>     \r\n    )\r\n}","import { Redirect, Route } from 'react-router-dom'\r\nimport { getCookie } from '../utils'\r\n\r\nexport const ProtectedRoute = ({ children, ...rest }: React.PropsWithChildren<{ [key: string]: any }>) => {\r\n  const isAuth = getCookie('accessToken')\r\n  \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuth ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}","import { NavLink, useHistory, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport styles from './profile.module.css'\r\nimport { logoutUser } from '../services/actions/auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Profile } from '../components/profile/profile'\r\nimport { Orders } from '../components/orders/orders'\r\nimport { Switch } from 'react-router-dom'\r\nimport { ProtectedRoute } from '../components/protected-route'\r\n\r\nexport function ProfilePage() {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const { url } = useRouteMatch()    \r\n\r\n    const logout = (e: any) => {\r\n        e.preventDefault()\r\n        dispatch(logoutUser() as any)\r\n        .then(() => history.replace({ pathname: '/login' }))\r\n    }\r\n\r\n    return (\r\n        <div className={ styles.profile }>\r\n            <aside className=\"mr-15\">\r\n                <nav>\r\n                    <ul className={styles.navList}>\r\n                        <li className={styles.navItem}>\r\n                            <NavLink exact to={`${url}`} className='text text_type_main-medium text_color_inactive' activeClassName={styles.active}>\r\n                                Профиль\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={styles.navItem}>\r\n                            <NavLink exact to={`${url}/orders`} className='text text_type_main-medium text_color_inactive' activeClassName={styles.active}>\r\n                                История заказов\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={styles.navItem}>\r\n                            <a href=\"/#\" onClick={logout} className='text text_type_main-medium text_color_inactive'>\r\n                                Выход\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <footer className=\"mt-20\">\r\n                    <p className='text text_type_main-default text_color_inactive'>В этом разделе Вы можете</p>\r\n                    <p className='text text_type_main-default text_color_inactive'>\r\n                        {\r\n                            location.pathname === '/profile/orders' ? 'просмотреть свою историю заказов' : 'изменить свои персональные данные'\r\n                        }\r\n                    </p>\r\n                </footer>\r\n            </aside>\r\n            <section className={styles.content}>\r\n                <Switch>\r\n                    <ProtectedRoute exact path={`${url}`}>\r\n                        <Profile />\r\n                    </ProtectedRoute>\r\n                    <ProtectedRoute exact path={`${url}/orders`}>\r\n                        <Orders />\r\n                    </ProtectedRoute>\r\n                </Switch>\r\n            </section>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { FeedItem } from '../components/feed-item/feed-item'\r\nimport styles from './feed.module.css'\r\nimport { feedsUrl } from '../url'\r\nimport type { ReduxStore } from '../services/store.types'\r\nimport type { TOrder } from '../types'\r\n\r\nexport function FeedPage() {\r\n    const dispatch = useDispatch()\r\n    const { messages } = useSelector((store: ReduxStore) => store.messages)\r\n    const [orders, setOrders] = useState<TOrder[]>([])\r\n    const [createdNumbers, setCreatedNumbers] = useState<TOrder[][]>([])\r\n    const [doneNumbers, setDoneNumbers] = useState<TOrder[][]>([])\r\n    const [total, setTotal] = useState(0)\r\n    const [totalToday, setTotalToday] = useState(0)\r\n\r\n    useEffect(() => {\r\n        dispatch({type: 'WS_CONNECTION_START', payload: feedsUrl})\r\n        return () => {\r\n            dispatch({type: 'WS_CONNECTION_CLOSED'})\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (messages[0]?.orders) {\r\n            setOrders(messages[0].orders)\r\n            setTotal(messages[0].total)\r\n            setTotalToday(messages[0].totalToday)\r\n        }\r\n    }, [messages])\r\n\r\n    useEffect(() => {\r\n        if (orders.length) {\r\n            const created = orders.filter(item => item.status === 'created')\r\n            const done = orders.filter(item => item.status === 'done')\r\n            setCreatedNumbers(splitArray(created, 10))\r\n            setDoneNumbers(splitArray(done, 10))\r\n        }\r\n    }, [orders])\r\n\r\n    const splitArray = (arr: any, size: number) => arr.reduce((p: any, c: any) => {\r\n        if (p[p.length-1].length === size) p.push([])        \r\n        p[p.length-1].push(c)\r\n        return p\r\n    }, [[]])\r\n\r\n    return (\r\n        <div>\r\n            <header className={ styles.header }>\r\n                <h1 className='text text_type_main-large pt-8 pb-6'>Лента заказов</h1>\r\n            </header>\r\n            <section className={ styles.content }>\r\n                <div className={ styles.feed }>\r\n                    { Boolean(orders.length) && orders.map(item => item?.ingredients?.length ? <FeedItem key={item['_id']} order={item} showStatus={false} /> : false) }\r\n                </div>\r\n                \r\n                <div className={ styles.feedInfo }>\r\n                    <div className={ styles.statusesWrapper }>\r\n                        <section className={ styles.statuses }>\r\n                            <header className=\"text text_type_main-medium pb-6\">Готовы:</header>\r\n                            <div className={ styles.statusesColumns }>\r\n                                {\r\n                                    doneNumbers.length && doneNumbers[0].length\r\n                                    ? doneNumbers.map((doneNumbersColumn, i) => \r\n                                        <div key={i} className={ styles.statusesColumn }>\r\n                                            { doneNumbersColumn.map(item => <span key={item.number} className={ styles.done + ' text text_type_digits-default' }>{item.number}</span>) }\r\n                                        </div>)\r\n                                    : <p className=\"text text_type_main-medium text_color_inactive\">нет</p>\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <section>\r\n                            <header className=\"text text_type_main-medium pb-6\">В работе:</header>\r\n                            <div className={ styles.statusesColumns }>\r\n                                {\r\n                                    createdNumbers.length && createdNumbers[0].length\r\n                                    ? createdNumbers.map((createdNumbersColumn, i) => \r\n                                        <div key={i} className={ styles.statusesColumn }>\r\n                                            { createdNumbersColumn.map(item => <span key={item.number} className=\"text text_type_digits-default\">{item.number}</span>) }\r\n                                        </div>)\r\n                                    : <p className=\"text text_type_main-medium text_color_inactive\">нет</p>\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"text text_type_main-medium mt-10\">Выполнено за все время:</p>\r\n                        <p className=\"text text_type_digits-large\">{total}</p>\r\n\r\n                        <p className=\"text text_type_main-medium mt-10\">Выполнено за сегодня:</p>\r\n                        <p className=\"text text_type_digits-large\">{totalToday}</p>\r\n                    </div>                    \r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect }  from 'react'\r\nimport styles from './ingredient-details.module.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport type { ReduxStore } from '../../services/store.types'\r\nimport type { TIngredient } from '../../types'\r\n\r\nexport default function IngredientDetails () {\r\n    const { ingredients } = useSelector((store: ReduxStore) => store.ingredients)\r\n    const { id } = useParams<{ id: string }>()\r\n    const [ingredient, setIngredient] = useState<TIngredient | null>(null)\r\n    \r\n    useEffect(() => {        \r\n        const targetIngredient = ingredients.filter(item => item['_id'] === id)[0]\r\n        setIngredient(targetIngredient)\r\n    }, [ingredients, id])\r\n\r\n    return (\r\n        ingredient \r\n        ?\r\n            <> \r\n                <p className=\"text text_type_main-large\">Детали ингредиента</p>\r\n                <figure className={styles.ingredient}>\r\n                    <p><img className={styles.image} src={ingredient['image_large']} alt={ingredient.name}/></p>    \r\n                    <figcaption className='text text_type_main-medium'>{ingredient.name}</figcaption>\r\n                </figure>\r\n                <section className={styles.details}>\r\n                    <div className=\"text_color_inactive\">\r\n                        <p className=\"text text_type_main-default mb-3\">Калории, ккал</p>\r\n                        <p className=\"text text_type_digits-default\">{ingredient.calories}</p>\r\n                    </div>\r\n                    <div className=\"text_color_inactive\">\r\n                        <p className=\"text text_type_main-default mb-3\">Белки, г</p>\r\n                        <p className=\"text text_type_digits-default\">{ingredient.proteins}</p>\r\n                    </div>\r\n                    <div className=\"text_color_inactive\">\r\n                        <p className=\"text text_type_main-default mb-3\">Жиры, г</p>\r\n                        <p className=\"text text_type_digits-default\">{ingredient.fat}</p>\r\n                    </div>\r\n                    <div className=\"text_color_inactive\">\r\n                        <p className=\"text text_type_main-default mb-3\">Углеводы, г</p>\r\n                        <p className=\"text text_type_digits-default\">{ingredient.carbohydrates}</p>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        :   <></>  \r\n    )\r\n}\r\n","import IngredientDetails from '../components/ingredient-details/ingredient-details'\r\nimport styles from './ingredients.module.css'\r\n\r\nexport function IngredientsPage() {\r\n    return (\r\n        <div className={styles.ingredients}>\r\n            <IngredientDetails/>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom'\r\nimport styles from './not-found.module.css'\r\n\r\nexport const NotFound404 = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className=\"text text_type_digits-large\">404</p>\r\n        <br />\r\n        <Link to='/' className={styles.link}>Перейти на главную страницу</Link>\r\n    </div>\r\n  );\r\n}; ","import styles from './order.module.css'\r\nimport { useState, useEffect }  from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getOrder } from '../../services/actions/order'\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { formatDate } from '../../utils'\r\nimport type { ReduxStore } from '../../services/store.types'\r\nimport type { TIngredient } from '../../types'\r\n\r\nexport default function Order() {\r\n    const { order, orderRequest, orderFailed } = useSelector((store: ReduxStore) => store.order)\r\n    const { ingredients } = useSelector((store: ReduxStore) => store.ingredients)\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams<{ id: string }>()\r\n    const [orderIngredients, setOrderIngredients] = useState<TIngredient[] | null>(null)\r\n    const [price, setPrice] = useState(0)\r\n\r\n    useEffect(() => {      \r\n        dispatch(getOrder(id))\r\n    }, [dispatch, id])\r\n\r\n    useEffect(() => {\r\n        if (ingredients.length) {\r\n            let totalPrice = 0\r\n            let bun = 0  \r\n            order?.ingredients?.forEach(ingredient => {\r\n                let targetIngredient = ingredients.filter(item => item['_id'] === ingredient)[0]\r\n                if (targetIngredient.type === 'bun' && !bun) {\r\n                    totalPrice += 2 * targetIngredient.price\r\n                    bun = 1\r\n                }\r\n                if ((targetIngredient.type !== 'bun'))\r\n                totalPrice += targetIngredient.price              \r\n            })\r\n            setPrice(totalPrice)\r\n            \r\n            let orderIngredientsSet = new Set()\r\n            let turgetOrderIngredients: TIngredient[] = []\r\n            order?.ingredients?.forEach(item => orderIngredientsSet.add(item))\r\n            orderIngredientsSet.forEach(value => turgetOrderIngredients.push(ingredients.filter(ingredient => ingredient['_id'] === value)[0]))\r\n            turgetOrderIngredients.forEach(item => {\r\n                item.type === 'bun'\r\n                    ? item.count = 2\r\n                    : item.count = order?.ingredients.filter(ingredient => ingredient === item['_id']).length\r\n            })\r\n            setOrderIngredients(turgetOrderIngredients)\r\n        }\r\n         \r\n    }, [ingredients, order])\r\n\r\n    const getStatus = (status: string) => {\r\n        if (status === 'done') return 'Выполнен'\r\n        if (status === 'created') return 'Создан'\r\n        if (status === 'pending') return 'Готовится'\r\n        return false\r\n    }\r\n\r\n    const getStatusColor = (status: string) => status === 'done' ? '#00CCCC' : '#FFFFFF'\r\n\r\n    if (orderFailed) return <p className=\"text text_type_main-default text_color_inactive\">Произошла ошибка при получении данных о заказе</p>\r\n    else if (orderRequest) return <p className=\"text text_type_main-default text_color_inactive\">Загрузка заказа...</p>\r\n    else {\r\n        return (\r\n            order &&\r\n            <section className={styles.orderInfo}>\r\n                <header className=\"text text_type_digits-default pt-4\">{'#' + order.number}</header>\r\n                <p className=\"text text_type_main-medium pt-10\">{order.name}</p>\r\n                <p className=\"text text_type_main-default pt-2\">\r\n                    <span style={{color: getStatusColor(order.status)}}>{getStatus(order.status)}</span>\r\n                </p>\r\n                <p className=\"text text_type_main-medium pt-15 pb-4\">Состав:</p>\r\n                <div className={styles.orderWrapper + ' pr-2'}>\r\n                    {\r\n                        Boolean(orderIngredients) && \r\n                            orderIngredients?.map((ingredient, i) => {                            \r\n                                return  <div key={i} className={styles.order + ' mt-4 pb-2'}>\r\n                                            <div className={styles.info}>\r\n                                                <div className={styles.imageWrapper + ' mr-4'}>\r\n                                                    <img className={styles.image} src={ingredient.image_mobile} alt=\"\" />\r\n                                                </div>\r\n                                                <div className={styles.name + ' text text_type_main-default'}>\r\n                                                    {ingredient.name}\r\n                                                </div>\r\n                                            </div>\r\n                                        \r\n                                            <div className={styles.price + ' text text_type_digits-default'}>\r\n                                                <span className=\"pr-2\">\r\n                                                    {(ingredient.count && ingredient.count > 1) && ingredient.count + ' x '}\r\n                                                    {ingredient.price}\r\n                                                </span>                                            \r\n                                                <CurrencyIcon type=\"primary\"/>\r\n                                            </div>\r\n                                        </div>\r\n                            })\r\n                    }\r\n                </div>\r\n                <footer className={styles.footer + ' mt-10 pr-2'}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">{formatDate(order.createdAt)}</p>\r\n                    <div className={styles.price + ' text text_type_digits-default'}>\r\n                        <span className=\"pr-2\">\r\n                            {price}\r\n                        </span>                                            \r\n                        <CurrencyIcon type=\"primary\"/>\r\n                    </div>\r\n                </footer>\r\n            </section>\r\n        )\r\n    }    \r\n}","import { orderItemUrl } from '../../url'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport { Actions, TGetOrderResponse } from '../actions/order.types'\r\nimport { Dispatch } from 'react'\r\nimport {\r\n    GET_ORDER,\r\n    GET_ORDER_FAILED,\r\n    GET_ORDER_SUCCESS\r\n} from './actionTypes'\r\n\r\nexport function getOrder (id: string) {\r\n    return function(dispatch: Dispatch<Actions>) {\r\n        dispatch({type: GET_ORDER})\r\n        \r\n        return axios\r\n        .get(orderItemUrl + id)\r\n        .then<TGetOrderResponse>((response: AxiosResponse) => {\r\n            dispatch({\r\n                type: GET_ORDER_SUCCESS,\r\n                order: response.data.orders[0]\r\n            })\r\n            return response.data\r\n        })\r\n        .catch(() => {            \r\n            dispatch({\r\n                type: GET_ORDER_FAILED\r\n            })\r\n        })\r\n    }\r\n}","import Order from '../components/order/order'\r\nimport styles from './order.module.css'\r\n\r\nexport function OrderPage() {\r\n    return (\r\n        <div className={styles.orderPage}>\r\n            <Order/>\r\n        </div>\r\n    )\r\n}","import { Redirect, Route } from 'react-router-dom'\r\nimport { getCookie } from '../utils'\r\n\r\nexport const ProtectedUnAuthResetRoute = ({ children, ...rest }: React.PropsWithChildren<{ [key: string]: any }>) => {\r\n  const isAuth = getCookie('accessToken')\r\n  const wasResetPassword = localStorage.getItem('resetPassword')\r\n  \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuth && wasResetPassword === 'true' ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}","import { Redirect, Route } from 'react-router-dom'\r\nimport { getCookie } from '../utils'\r\n\r\nexport const ProtectedUnAuthRoute = ({ children, ...rest }: React.PropsWithChildren<{ [key: string]: any }>) => {\r\n  const isAuth = getCookie('accessToken')\r\n  \r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuth ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}","import styles from './loader-overlay.module.css'\r\n\r\nexport default function LoaderOverlay () {\r\n    return (<div className={styles.overlay}></div>)\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport styles from './loader.module.css'\r\nimport LoaderOverlay from '../loader-overlay/loader-overlay'\r\n\r\nconst loaderRoot = document.getElementById('loader') as HTMLElement\r\n\r\nexport default function Loader (props: { text: string }) {\r\n    const { text } = props\r\n\r\n    return ReactDOM.createPortal (\r\n        (\r\n          <>\r\n            <div className={styles.loader}>\r\n                <p className='text text_type_main-default'>{text}</p>\r\n            </div>\r\n            <LoaderOverlay/>\r\n          </>\r\n        ), \r\n        loaderRoot\r\n    )\r\n}\r\n","import styles from './app.module.css'\r\nimport AppHeader from '../app-header/app-header'\r\nimport { BrowserRouter as Router, Switch, Route, useLocation, useHistory } from 'react-router-dom'\r\nimport { LoginPage, RegisterPage, HomePage, ForgotPasswordPage, ResetPasswordPage, ProfilePage, FeedPage, IngredientsPage, NotFound404, OrderPage } from '../../pages'\r\nimport { ProtectedRoute } from '../protected-route'\r\nimport { ProtectedUnAuthResetRoute } from '../protected-un-auth-reset-route'\r\nimport { ProtectedUnAuthRoute } from '../protected-un-auth-route'\r\nimport { useDispatch, useSelector } from '../../services/hooks'\r\nimport Loader from '../loader/loader'\r\nimport { Modal } from '../modal/modal'\r\nimport IngredientDetails from '../ingredient-details/ingredient-details'\r\nimport Order from '../order/order'\r\nimport { getIngredients } from '../../services/actions/burger-ingredients'\r\nimport { useEffect } from 'react'\r\nimport type { ReduxStore } from '../../services/store.types'\r\n\r\nexport default function App() {\r\n  const ModalSwitch = () => {    \r\n    const { loader } = useSelector((store: ReduxStore) => store.loader)\r\n    const dispatch = useDispatch()\r\n    const location = useLocation<any>()\r\n    const history = useHistory<History>()\r\n    const background = (history.action === 'PUSH' || history.action === 'REPLACE') && location.state && location.state.background\r\n    \r\n    const onClose = (e: Event) => {\r\n      if(e) e.stopPropagation()\r\n      history.goBack()\r\n    }\r\n\r\n    useEffect(() => {\r\n      dispatch(getIngredients())\r\n    }, [dispatch])\r\n\r\n    return (\r\n      <div className=\"App\">\r\n          <AppHeader/>\r\n          <main className={ styles.main }>        \r\n              <Switch location={background || location}>\r\n                <Route path={`/`} exact>\r\n                  <HomePage />\r\n                </Route>\r\n                <ProtectedUnAuthRoute path={`/login`} exact>\r\n                  <LoginPage />\r\n                </ProtectedUnAuthRoute>\r\n                <Route path={`/register`} exact>\r\n                  <RegisterPage />\r\n                </Route>\r\n                <ProtectedUnAuthRoute path={`/forgot-password`} exact>\r\n                  <ForgotPasswordPage />\r\n                </ProtectedUnAuthRoute>\r\n                <ProtectedUnAuthResetRoute path={`/reset-password`} exact>\r\n                  <ResetPasswordPage />\r\n                </ProtectedUnAuthResetRoute>\r\n                <Route path={`/feed`} exact>\r\n                  <FeedPage />\r\n                </Route>\r\n                <Route path={`/feed/:id`} exact>\r\n                  <OrderPage />\r\n                </Route>\r\n                <ProtectedRoute path={`/profile/orders/:id`} exact>\r\n                  <OrderPage />\r\n                </ProtectedRoute>\r\n                <ProtectedRoute path={`/profile`}>                         \r\n                  <ProfilePage />\r\n                </ProtectedRoute>                \r\n                <Route path={`/ingredients/:id`} exact>\r\n                  <IngredientsPage />\r\n                </Route>\r\n                <Route>\r\n                  <NotFound404 />\r\n                </Route>\r\n              </Switch>\r\n\r\n              {background && (\r\n                <Route\r\n                  path='/ingredients/:id'\r\n                  children={\r\n                    <Modal onClose={onClose}>\r\n                      <IngredientDetails/>\r\n                    </Modal>\r\n                  }\r\n                />\r\n              )}\r\n\r\n              {background && (\r\n                <Route\r\n                  path='/feed/:id'\r\n                  children={\r\n                    <Modal onClose={onClose}>\r\n                      <Order/>\r\n                    </Modal>\r\n                  }\r\n                />\r\n              )}\r\n\r\n              {background && (\r\n                <Route\r\n                  path='/profile/orders/:id'\r\n                  children={\r\n                    <Modal onClose={onClose}>\r\n                      <Order/>\r\n                    </Modal>\r\n                  }\r\n                />\r\n              )}\r\n          </main>\r\n        {\r\n          loader && <Loader text={'Загрузка...'} />        \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <ModalSwitch />\r\n    </Router>\r\n  )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Actions, ActiveTabAction } from '../actions/burgrer-ingredients.types'\r\nimport { ActiveTabStore, BurgerIngredientStore} from './burger-ingredient.types'\r\nimport {\r\n    GET_INGREDIENTS,\r\n    GET_INGREDIENTS_FAILED,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    ACTIVE_TAB,\r\n    ADD_TO_CONSTRUCTOR,\r\n    DEL_FROM_CONSTRUCTOR,\r\n    CLEAR_CONSTRUCTOR,\r\n    REORDER_INGREDIENTS,\r\n    SET_UNIQUE_KEY\r\n} from '../actions/actionTypes'\r\n\r\nconst initialTabState: ActiveTabStore = {\r\n  activeTab: 'Булки'\r\n}\r\n\r\nexport const activeTabReducer = (state = initialTabState, action: ActiveTabAction) => {\r\n  if (action.type === ACTIVE_TAB) return { activeTab: action.activeTab }\r\n  return state\r\n}\r\n\r\nconst initialIngredientsState: BurgerIngredientStore = {\r\n  ingredients: [],\r\n  ingredientsRequest: false,\r\n  ingredientsFailed: false,\r\n  constructor: []\r\n}\r\n\r\nexport const ingredientsReducer = (state = initialIngredientsState, action: Actions) => {\r\n  switch (action.type) {\r\n    case GET_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: true,\r\n        ingredientsFailed: false,\r\n      }\r\n    }\r\n    case GET_INGREDIENTS_SUCCESS: {\r\n      return { \r\n          ...state, \r\n          ingredients: action.ingredients, \r\n          ingredientsRequest: false \r\n      }\r\n    }\r\n    case GET_INGREDIENTS_FAILED: {\r\n      return { \r\n          ...state, \r\n          ingredientsFailed: true, \r\n          ingredientsRequest: false \r\n      }\r\n    }\r\n    case REORDER_INGREDIENTS:\r\n      return {\r\n        ...state,\r\n        constructor: action.newElements\r\n      }\r\n    case ADD_TO_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        constructor: action.el.type === 'bun'\r\n          ? [...state.constructor.filter(item => item.type !== 'bun'), action.el]\r\n          : [...state.constructor, action.el]  \r\n      }\r\n    }\r\n    case CLEAR_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        constructor: []\r\n      }\r\n    }\r\n    case DEL_FROM_CONSTRUCTOR: {\r\n      return { ...state, constructor: [...state.constructor].filter(ingredient => ingredient.uniqueKey !== action.uniqueKey) }\r\n    }\r\n    case SET_UNIQUE_KEY:\r\n      return {\r\n        ...state,\r\n        constructor: [...state.constructor.map(item => {\r\n          return {\r\n            ...item, \r\n            uniqueKey: Number((Math.random() * 10000).toFixed(0))\r\n          }\r\n        })]\r\n      }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { OrderNumberStore } from './order-details.type'\r\nimport { Actions } from '../actions/order-details.type'\r\nimport {\r\n    GET_ODDER_NUMBER,\r\n    GET_ODDER_NUMBER_FAILED,\r\n    GET_ODDER_NUMBER_SUCCESS\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState: OrderNumberStore = {\r\n    number: '',\r\n    numberRequest: false,\r\n    numberFailed: false\r\n}\r\n\r\nexport const orderNumberReducer = (state = initialState, action: Actions) => {\r\n    switch (action.type) {\r\n      case GET_ODDER_NUMBER: {\r\n        return {\r\n          ...state,\r\n          numberRequest: true,\r\n          numberFailed: false,\r\n        }\r\n      }\r\n      case GET_ODDER_NUMBER_SUCCESS: {\r\n        return { \r\n            ...state, \r\n            number: action.number, \r\n            numberRequest: false \r\n        }\r\n      }\r\n      case GET_ODDER_NUMBER_FAILED: {\r\n        return { \r\n            ...state, \r\n            numberFailed: true, \r\n            numberRequest: false \r\n        }\r\n      }\r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }","import { LoaderAction } from '../actions/loader.types'\r\nimport { LoaderStore } from './loader.types'\r\nimport {\r\n    SHOW_LOADER\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState: LoaderStore = {\r\n  loader: false\r\n}\r\n\r\nexport const loaderReducer = (state = initialState, action: LoaderAction) => {\r\n    switch (action.type) {\r\n      case SHOW_LOADER: {\r\n        return {\r\n            loader: action.loader\r\n        }\r\n      }\r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }","import { Actions } from '../actions/wsActionTypes'\r\nimport { WsStore } from './wsReducer.type'\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE\r\n} from '../actions/wsActionTypes'\r\n\r\nconst initialState: WsStore = {\r\n  wsConnected: false,\r\n  messages: [],\r\n  error: ''\r\n}\r\n\r\nexport const wsReducer = (state = initialState, action: Actions) => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        wsConnected: true\r\n      }\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        wsConnected: false\r\n      }\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        messages: [],\r\n        error: null,\r\n        wsConnected: false\r\n      }\r\n\r\n    case WS_GET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        messages: [action.payload]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { OrderStore } from './order.types'\r\nimport { Actions } from '../actions/order.types'\r\nimport {\r\n    GET_ORDER,\r\n    GET_ORDER_FAILED,\r\n    GET_ORDER_SUCCESS,\r\n    CLEAR_ORDER\r\n} from '../actions/actionTypes'\r\n\r\nconst initialOrderState: OrderStore = {\r\n  order: null,\r\n  orderRequest: false,\r\n  orderFailed: false\r\n}\r\n\r\nexport const orderReducer = (state = initialOrderState, action: Actions) => {\r\n  switch (action.type) {\r\n    case GET_ORDER: {\r\n      return {\r\n        ...state,\r\n        orderRequest: true,\r\n        orderFailed: false,\r\n      }\r\n    }\r\n    case GET_ORDER_SUCCESS: {\r\n      return { \r\n          ...state, \r\n          order: action.order, \r\n          orderRequest: false \r\n      }\r\n    }\r\n    case GET_ORDER_FAILED: {\r\n      return { \r\n          ...state, \r\n          orderFailed: true, \r\n          orderRequest: false \r\n      }\r\n    }\r\n    case CLEAR_ORDER: {\r\n      return {\r\n        ...state,\r\n        order: null\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { UserStore } from './profile.types'\r\nimport { Actions } from '../actions/profile.types'\r\nimport {\r\n    GET_USER,\r\n    GET_USER_FAILED,\r\n    GET_USER_SUCCESS\r\n} from '../actions/actionTypes'\r\n\r\nconst initialUSerState: UserStore = {\r\n  user: null,\r\n  userRequest: false,\r\n  userFailed: false\r\n}\r\n\r\nexport const userReducer = (state = initialUSerState, action: Actions) => {\r\n  switch (action.type) {\r\n    case GET_USER: {\r\n      return {\r\n        ...state,\r\n        userRequest: true,\r\n        userFailed: false,\r\n      }\r\n    }\r\n    case GET_USER_SUCCESS: {\r\n      return { \r\n          ...state, \r\n          user: action.user, \r\n          userRequest: false \r\n      }\r\n    }\r\n    case GET_USER_FAILED: {\r\n      return { \r\n          ...state, \r\n          userFailed: true, \r\n          userRequest: false \r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport { ingredientsReducer, activeTabReducer } from './burger-ingredients'\r\nimport { orderNumberReducer } from './order-details'\r\nimport { loaderReducer } from './loader'\r\nimport { wsReducer } from './wsReducer'\r\nimport { orderReducer } from './order'\r\nimport { userReducer } from './profile'\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n    activeTab: activeTabReducer,\r\n    orderNumber: orderNumberReducer,\r\n    loader: loaderReducer,\r\n    messages: wsReducer,\r\n    order: orderReducer,\r\n    user: userReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { socketMiddleware } from './middleware/socketMiddleware'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n  }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk), applyMiddleware(socketMiddleware()))\r\n\r\nexport const initStore = (initialState = {}) => createStore(rootReducer, initialState, enhancer)\r\n  ","import { Dispatch } from 'redux'\r\nimport { Actions } from '../actions/wsActionTypes'\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_CONNECTION_START,\r\n  WS_SEND_MESSAGE\r\n} from '../actions/wsActionTypes'\r\n\r\nexport const socketMiddleware = () => {\r\n  return (store: { dispatch: Dispatch<Actions> }) => {\r\n    let socket: any = null\r\n\r\n    return (next: any) => (action: any) => {\r\n      const { dispatch } = store\r\n      const { type, payload } = action\r\n  \r\n      if (type === WS_CONNECTION_START) {\r\n        socket = new WebSocket(payload)\r\n      }\r\n      if (socket) {\r\n          socket.onopen = (event: WebSocketEventMap) => {\r\n          dispatch({ type: WS_CONNECTION_SUCCESS, payload: event })\r\n        }\r\n\r\n        socket.onerror = (event: WebSocketEventMap) => {\r\n          dispatch({ type: WS_CONNECTION_ERROR, payload: event })\r\n        }\r\n\r\n        socket.onmessage = (event: WebSocketEventMap & { data: string }) => {\r\n          const { data } = event\r\n          const parsedData = JSON.parse(data)\r\n          dispatch({ type: WS_GET_MESSAGE, payload: parsedData })\r\n        }\r\n\r\n        socket.onclose = (event: WebSocketEventMap) => {\r\n          dispatch({ type: WS_CONNECTION_CLOSED, payload: event })\r\n        }\r\n\r\n        if (type === WS_SEND_MESSAGE) {\r\n          const message = payload\r\n          socket.send(JSON.stringify(message))\r\n        }\r\n      }\r\n\r\n      next(action)\r\n    }\r\n  }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './components/app/app'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'react-redux'\r\nimport { initStore } from './services/store'\r\n\r\nconst store = initStore()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"feed_content__jB9ZM\",\"header\":\"feed_header__3z7Nw\",\"feed\":\"feed_feed__2u1En\",\"feedInfo\":\"feed_feedInfo__1blx5\",\"statusesWrapper\":\"feed_statusesWrapper__Juo2u\",\"statuses\":\"feed_statuses__Slzb8\",\"statusesColumns\":\"feed_statusesColumns__2pLtb\",\"statusesColumn\":\"feed_statusesColumn__1Iw3h\",\"done\":\"feed_done__1r1xq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app-header_wrapper__kFjh5\",\"header\":\"app-header_header__12uxx\",\"list\":\"app-header_list__3c9wq\",\"navItem\":\"app-header_navItem__1H4vj\",\"profile\":\"app-header_profile__2Gs4q\",\"active\":\"app-header_active__3kEng\",\"logo\":\"app-header_logo__1dEVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderInfo\":\"order_orderInfo__1b6iW\",\"orderWrapper\":\"order_orderWrapper__1j1Fu\",\"order\":\"order_order__144zg\",\"footer\":\"order_footer__1AgDY\",\"imageWrapper\":\"order_imageWrapper__1Zyw1\",\"image\":\"order_image__14-V7\",\"name\":\"order_name__3xY7g\",\"info\":\"order_info__3EswD\",\"price\":\"order_price__28qHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__9k1pT\",\"content\":\"profile_content__2giNu\",\"navList\":\"profile_navList__2ypC5\",\"navItem\":\"profile_navItem__14a-F\",\"active\":\"profile_active__Sqs2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"burger-constructor_burgerConstructor__287DL\",\"bun\":\"burger-constructor_bun__1cT81\",\"otherItem\":\"burger-constructor_otherItem__1ehyH\",\"otherIngredients\":\"burger-constructor_otherIngredients__259Kk\",\"other\":\"burger-constructor_other__1EVYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__29YWc\",\"price\":\"ingredient_price__1ALfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient-details_ingredient__y80-J\",\"image\":\"ingredient-details_image__2coFr\",\"details\":\"ingredient-details_details__mTIHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredients-group_ingredients__1Feiu\",\"group\":\"ingredients-group_group__1VI7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__Q2J3h\",\"close\":\"modal_close__goOvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"otherItem\":\"not-bun-ingredients-constructor_otherItem__2Rst8\",\"other\":\"not-bun-ingredients-constructor_other__2WqUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"home_content__tchZq\",\"header\":\"home_header__34zOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found_container__BWPC7\"};"],"sourceRoot":""}